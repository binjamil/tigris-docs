{
  "files": [
    {
      "name": "server/v1/api.proto",
      "description": "",
      "package": "tigrisdata.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AppKey",
          "longName": "AppKey",
          "fullName": "tigrisdata.v1.AppKey",
          "description": "An user AppKey",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Generated client id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "A human readable app name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A human readable app description",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "secret",
              "description": "Generated app secret",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Created at",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_by",
              "description": "Created by",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Updated at",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_by",
              "description": "Updated by",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "project",
              "description": "Project it belongs to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "role",
              "description": "Role associated with the key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key_type",
              "description": "key type [credentials, api_key]",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BeginTransactionRequest",
          "longName": "BeginTransactionRequest",
          "fullName": "tigrisdata.v1.BeginTransactionRequest",
          "description": "Start new transaction in project specified by \"project\".",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose DB this transaction belongs to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "The transaction options.",
              "label": "",
              "type": "TransactionOptions",
              "longType": "TransactionOptions",
              "fullType": "tigrisdata.v1.TransactionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a project branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BeginTransactionResponse",
          "longName": "BeginTransactionResponse",
          "fullName": "tigrisdata.v1.BeginTransactionResponse",
          "description": "Start transaction returns transaction context\n which uniquely identifies the transaction",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx_ctx",
              "description": "Returns a tigris transactional context with details about the transactions.",
              "label": "",
              "type": "TransactionCtx",
              "longType": "TransactionCtx",
              "fullType": "tigrisdata.v1.TransactionCtx",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BranchInfo",
          "longName": "BranchInfo",
          "fullName": "tigrisdata.v1.BranchInfo",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "branch",
              "description": "Branch name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the branch",
              "label": "",
              "type": "BranchMetadata",
              "longType": "BranchMetadata",
              "fullType": "tigrisdata.v1.BranchMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BranchMetadata",
          "longName": "BranchMetadata",
          "fullName": "tigrisdata.v1.BranchMetadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "BuildCollectionIndexRequest",
          "longName": "BuildCollectionIndexRequest",
          "fullName": "tigrisdata.v1.BuildCollectionIndexRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to index documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Name of the collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuildCollectionIndexResponse",
          "longName": "BuildCollectionIndexResponse",
          "fullName": "tigrisdata.v1.BuildCollectionIndexResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "indexes",
              "description": "",
              "label": "repeated",
              "type": "CollectionIndex",
              "longType": "CollectionIndex",
              "fullType": "tigrisdata.v1.CollectionIndex",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuildCollectionSearchIndexRequest",
          "longName": "BuildCollectionSearchIndexRequest",
          "fullName": "tigrisdata.v1.BuildCollectionSearchIndexRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to index documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Name of the collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuildCollectionSearchIndexResponse",
          "longName": "BuildCollectionSearchIndexResponse",
          "fullName": "tigrisdata.v1.BuildCollectionSearchIndexResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Collation",
          "longName": "Collation",
          "fullName": "tigrisdata.v1.Collation",
          "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "case",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollectionDescription",
          "longName": "CollectionDescription",
          "fullName": "tigrisdata.v1.CollectionDescription",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "Name of the collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the collection.",
              "label": "",
              "type": "CollectionMetadata",
              "longType": "CollectionMetadata",
              "fullType": "tigrisdata.v1.CollectionMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema",
              "description": "Collections schema.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Collection size in bytes.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indexes",
              "description": "The index information.",
              "label": "repeated",
              "type": "CollectionIndex",
              "longType": "CollectionIndex",
              "fullType": "tigrisdata.v1.CollectionIndex",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollectionIndex",
          "longName": "CollectionIndex",
          "fullName": "tigrisdata.v1.CollectionIndex",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "",
              "label": "repeated",
              "type": "Field",
              "longType": "Field",
              "fullType": "tigrisdata.v1.Field",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollectionInfo",
          "longName": "CollectionInfo",
          "fullName": "tigrisdata.v1.CollectionInfo",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "Collection name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the collection.",
              "label": "",
              "type": "CollectionMetadata",
              "longType": "CollectionMetadata",
              "fullType": "tigrisdata.v1.CollectionMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollectionMetadata",
          "longName": "CollectionMetadata",
          "fullName": "tigrisdata.v1.CollectionMetadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "CollectionOptions",
          "longName": "CollectionOptions",
          "fullName": "tigrisdata.v1.CollectionOptions",
          "description": "Collection requests modifying options.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "CommitTransactionRequest",
          "longName": "CommitTransactionRequest",
          "fullName": "tigrisdata.v1.CommitTransactionRequest",
          "description": "Commit transaction with the given ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose DB this transaction belongs to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CommitTransactionResponse",
          "longName": "CommitTransactionResponse",
          "fullName": "tigrisdata.v1.CommitTransactionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "Status of commit transaction operation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CountRequest",
          "longName": "CountRequest",
          "fullName": "tigrisdata.v1.CountRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to count documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name to count documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Count documents matching this filter. An empty filter means count all documents. A filter can simply\nbe a key, value pair where a key is the field name and the value would be the value for this field.\nTigris also allows complex filtering by passing logical expressions. Logical filters are applied on\ntwo or more fields using `$or` and `$and`. The detailed documentation of the filter\nis \u003ca href=\"https://docs.tigrisdata.com/overview/query#specification-1\" title=\"here\"\u003ehere\u003c/a\u003e.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CountResponse",
          "longName": "CountResponse",
          "fullName": "tigrisdata.v1.CountResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "count",
              "description": "Count of documents.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateAppKeyRequest",
          "longName": "CreateAppKeyRequest",
          "fullName": "tigrisdata.v1.CreateAppKeyRequest",
          "description": "Request creation of user app key",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "A human readable app name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A human readable app description",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "project",
              "description": "Project name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "role",
              "description": "role name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key_type",
              "description": "key_type [credentials, api_key]",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateAppKeyResponse",
          "longName": "CreateAppKeyResponse",
          "fullName": "tigrisdata.v1.CreateAppKeyResponse",
          "description": "CreateAppKeyResponse returns created app keys",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "created_app_key",
              "description": "created app object",
              "label": "",
              "type": "AppKey",
              "longType": "AppKey",
              "fullType": "tigrisdata.v1.AppKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateBranchRequest",
          "longName": "CreateBranchRequest",
          "fullName": "tigrisdata.v1.CreateBranchRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Create a database branch in this project",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Name of the database branch to be created.\n\u003cp\u003e\u003c/p\u003e**Note**: `main` is a reserved branch name for primary database and is automatically created with CreateProject",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateBranchResponse",
          "longName": "CreateBranchResponse",
          "fullName": "tigrisdata.v1.CreateBranchResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"created\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateCollectionStatus",
          "longName": "CreateCollectionStatus",
          "fullName": "tigrisdata.v1.CreateCollectionStatus",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "An enum with value set as \"created\" or \"updated\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateGlobalAppKeyRequest",
          "longName": "CreateGlobalAppKeyRequest",
          "fullName": "tigrisdata.v1.CreateGlobalAppKeyRequest",
          "description": "Request creation of global app key",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "A human readable app name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A human readable app description",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateGlobalAppKeyResponse",
          "longName": "CreateGlobalAppKeyResponse",
          "fullName": "tigrisdata.v1.CreateGlobalAppKeyResponse",
          "description": "CreateGlobalAppKeyResponse returns created global app key",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "created_app_key",
              "description": "created app object",
              "label": "",
              "type": "GlobalAppKey",
              "longType": "GlobalAppKey",
              "fullType": "tigrisdata.v1.GlobalAppKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateOrUpdateCollectionRequest",
          "longName": "CreateOrUpdateCollectionRequest",
          "fullName": "tigrisdata.v1.CreateOrUpdateCollectionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to create or update collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name to create.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema",
              "description": "The schema specifications are same as\nJSON schema specification defined \u003ca href=\"https://json-schema.org/specification.html\" title=\"here\"\u003ehere\u003c/a\u003e.\n\u003cp\u003e\u003c/p\u003e\nSchema example:\n`{\n \"title\": \"user\",\n \"description\": \"Collection of documents with details of users\",\n \"properties\": {\n   \"id\": {\n     \"description\": \"A unique identifier for the user\",\n     \"type\": \"integer\"\n   },\n   \"name\": {\n     \"description\": \"Name of the user\",\n     \"type\": \"string\",\n     \"maxLength\": 128\n   },\n   \"balance\": {\n     \"description\": \"User account balance\",\n     \"type\": \"number\"\n   }\n },\n \"primary_key\": [\"id\"]\n}`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "only_create",
              "description": "If set to `true` then the update schema request to the collection will fail by returning a conflict with HTTP Status\ncode 409. The default is false.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "CollectionOptions",
              "longType": "CollectionOptions",
              "fullType": "tigrisdata.v1.CollectionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateOrUpdateCollectionResponse",
          "longName": "CreateOrUpdateCollectionResponse",
          "fullName": "tigrisdata.v1.CreateOrUpdateCollectionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"created\" or \"updated\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateOrUpdateCollectionsRequest",
          "longName": "CreateOrUpdateCollectionsRequest",
          "fullName": "tigrisdata.v1.CreateOrUpdateCollectionsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to create or update collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schemas",
              "description": "collections to create.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "only_create",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "CollectionOptions",
              "longType": "CollectionOptions",
              "fullType": "tigrisdata.v1.CollectionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateOrUpdateCollectionsResponse",
          "longName": "CreateOrUpdateCollectionsResponse",
          "fullName": "tigrisdata.v1.CreateOrUpdateCollectionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resp",
              "description": "A detailed response message.",
              "label": "repeated",
              "type": "CreateCollectionStatus",
              "longType": "CreateCollectionStatus",
              "fullType": "tigrisdata.v1.CreateCollectionStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "failedAtIndex",
              "description": "In the case, when API returns an error this is an index\nin the \"schemas\" field which failed.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "",
              "label": "",
              "type": "Error",
              "longType": "tigrisdata.observability.v1.Error",
              "fullType": "tigrisdata.observability.v1.Error",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateProjectRequest",
          "longName": "CreateProjectRequest",
          "fullName": "tigrisdata.v1.CreateProjectRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Create project with this name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "optional configuration for the Project",
              "label": "optional",
              "type": "ProjectOptions",
              "longType": "ProjectOptions",
              "fullType": "tigrisdata.v1.ProjectOptions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_options",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateProjectResponse",
          "longName": "CreateProjectResponse",
          "fullName": "tigrisdata.v1.CreateProjectResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"created\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DatabaseMetadata",
          "longName": "DatabaseMetadata",
          "fullName": "tigrisdata.v1.DatabaseMetadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "DatabaseOptions",
          "longName": "DatabaseOptions",
          "fullName": "tigrisdata.v1.DatabaseOptions",
          "description": "Database requests modifying options.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "DeleteAppKeyRequest",
          "longName": "DeleteAppKeyRequest",
          "fullName": "tigrisdata.v1.DeleteAppKeyRequest",
          "description": "Request deletion of an app key",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "app_key id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "project",
              "description": "project name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteAppKeyResponse",
          "longName": "DeleteAppKeyResponse",
          "fullName": "tigrisdata.v1.DeleteAppKeyResponse",
          "description": "AppKeys returns the flag to convey if app key was deleted",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deleted",
              "description": "status flag for delete operation",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteBranchRequest",
          "longName": "DeleteBranchRequest",
          "fullName": "tigrisdata.v1.DeleteBranchRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Delete a database branch in this project",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Name of the database branch to delete.\n\u003cp\u003e\u003c/p\u003e**Note**: `main` branch cannot be deleted, use DeleteProject instead",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteBranchResponse",
          "longName": "DeleteBranchResponse",
          "fullName": "tigrisdata.v1.DeleteBranchResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"deleted\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteGlobalAppKeyRequest",
          "longName": "DeleteGlobalAppKeyRequest",
          "fullName": "tigrisdata.v1.DeleteGlobalAppKeyRequest",
          "description": "Request deletion of an global app key",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "app_key id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteGlobalAppKeyResponse",
          "longName": "DeleteGlobalAppKeyResponse",
          "fullName": "tigrisdata.v1.DeleteGlobalAppKeyResponse",
          "description": "AppKeys returns the flag to convey if global app key was deleted",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deleted",
              "description": "status flag for delete operation",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteProjectRequest",
          "longName": "DeleteProjectRequest",
          "fullName": "tigrisdata.v1.DeleteProjectRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Delete Project with this name.\n\u003cp\u003e\u003c/p\u003e**Note**: Deletes all resources under this project. Use with caution.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteProjectResponse",
          "longName": "DeleteProjectResponse",
          "fullName": "tigrisdata.v1.DeleteProjectResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"dropped\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteRequest",
          "longName": "DeleteRequest",
          "fullName": "tigrisdata.v1.DeleteRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to delete documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name where to insert documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Delete documents which matching specified filter.\nA filter can simply be key, value where key\nis the field name and value would be the value for this field. Or a filter can be logical where\ntwo or more fields can be logically joined using $or and $and. A few examples of filter:\n\u003cli\u003e To delete a user document where the id has a value 1: ```{\"id\": 1 }```\n\u003cli\u003e To delete all the user documents where the key \"id\" has a value 1 or 2 or 3: `{\"$or\": [{\"id\": 1}, {\"id\": 2}, {\"id\": 3}]}`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "DeleteRequestOptions",
              "longType": "DeleteRequestOptions",
              "fullType": "tigrisdata.v1.DeleteRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteRequestOptions",
          "longName": "DeleteRequestOptions",
          "fullName": "tigrisdata.v1.DeleteRequestOptions",
          "description": "Additional options for deleted requests.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "write_options",
              "description": "",
              "label": "",
              "type": "WriteOptions",
              "longType": "WriteOptions",
              "fullType": "tigrisdata.v1.WriteOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collation",
              "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
              "label": "",
              "type": "Collation",
              "longType": "Collation",
              "fullType": "tigrisdata.v1.Collation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Limit the number of documents to be deleted",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteResponse",
          "longName": "DeleteResponse",
          "fullName": "tigrisdata.v1.DeleteResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "an enum with value set as \"deleted\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deleted_count",
              "description": "Returns the number of documents deleted.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DescribeCollectionRequest",
          "longName": "DescribeCollectionRequest",
          "fullName": "tigrisdata.v1.DescribeCollectionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to get description of its collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Name of the collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema_format",
              "description": "Return schema in the requested format.\nFormat can be JSON, Go, TypeScript, Java.\nDefault is JSON.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "Collection options.",
              "label": "",
              "type": "CollectionOptions",
              "longType": "CollectionOptions",
              "fullType": "tigrisdata.v1.CollectionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DescribeCollectionResponse",
          "longName": "DescribeCollectionResponse",
          "fullName": "tigrisdata.v1.DescribeCollectionResponse",
          "description": "A detailed description of the collection.\nThe description returns collection metadata and the schema.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "Name of the collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the collection.",
              "label": "",
              "type": "CollectionMetadata",
              "longType": "CollectionMetadata",
              "fullType": "tigrisdata.v1.CollectionMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema",
              "description": "Schema of this collection.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "The size of this collection in bytes.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indexes",
              "description": "The index information.",
              "label": "repeated",
              "type": "CollectionIndex",
              "longType": "CollectionIndex",
              "fullType": "tigrisdata.v1.CollectionIndex",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "search_status",
              "description": "search index status",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DescribeDatabaseRequest",
          "longName": "DescribeDatabaseRequest",
          "fullName": "tigrisdata.v1.DescribeDatabaseRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to get description.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema_format",
              "description": "Return schema in the requested format.\nFormat can be JSON, Go, TypeScript, Java.\nDefault is JSON.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DescribeDatabaseResponse",
          "longName": "DescribeDatabaseResponse",
          "fullName": "tigrisdata.v1.DescribeDatabaseResponse",
          "description": "A detailed description of the database and all the associated collections.\nDescription of the collection includes schema details as well.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Metadata about the database.",
              "label": "",
              "type": "DatabaseMetadata",
              "longType": "DatabaseMetadata",
              "fullType": "tigrisdata.v1.DatabaseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collections",
              "description": "A detailed description about all the collections.\nThe description returns collection metadata and the schema.",
              "label": "repeated",
              "type": "CollectionDescription",
              "longType": "CollectionDescription",
              "fullType": "tigrisdata.v1.CollectionDescription",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Sum of all the collections sizes present in this database.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branches",
              "description": "List of all the branches in this database.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DropCollectionRequest",
          "longName": "DropCollectionRequest",
          "fullName": "tigrisdata.v1.DropCollectionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to delete collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name to delete.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "CollectionOptions",
              "longType": "CollectionOptions",
              "fullType": "tigrisdata.v1.CollectionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a project branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DropCollectionResponse",
          "longName": "DropCollectionResponse",
          "fullName": "tigrisdata.v1.DropCollectionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"dropped\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExplainResponse",
          "longName": "ExplainResponse",
          "fullName": "tigrisdata.v1.ExplainResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "The collection that the explain response is run against",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "read_type",
              "description": "The Type of read can be either Scan or Secondary Index",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "The filter used in the query",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sorting",
              "description": "The type of sort used",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key_range",
              "description": "the key range",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "field",
              "description": "the name of the field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FacetCount",
          "longName": "FacetCount",
          "fullName": "tigrisdata.v1.FacetCount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "count",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FacetStats",
          "longName": "FacetStats",
          "fullName": "tigrisdata.v1.FacetStats",
          "description": "Additional stats for faceted field",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "avg",
              "description": "Average of all values in a field. Only available for numeric fields",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_avg",
              "defaultValue": ""
            },
            {
              "name": "max",
              "description": "Maximum of all values in a field. Only available for numeric fields",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max",
              "defaultValue": ""
            },
            {
              "name": "min",
              "description": "Minimum of all values in a field. Only available for numeric fields",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_min",
              "defaultValue": ""
            },
            {
              "name": "sum",
              "description": "Sum of all values in a field. Only available for numeric fields",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sum",
              "defaultValue": ""
            },
            {
              "name": "count",
              "description": "Total number of values in a field",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Field",
          "longName": "Field",
          "fullName": "tigrisdata.v1.Field",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GlobalAppKey",
          "longName": "GlobalAppKey",
          "fullName": "tigrisdata.v1.GlobalAppKey",
          "description": "The global AppKey",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Generated client id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "A human readable app name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A human readable app description",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "secret",
              "description": "Generated app secret",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Created at",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_by",
              "description": "Created by",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Updated at",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_by",
              "description": "Updated by",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GroupedSearchHits",
          "longName": "GroupedSearchHits",
          "fullName": "tigrisdata.v1.GroupedSearchHits",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "group_keys",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hits",
              "description": "",
              "label": "repeated",
              "type": "SearchHit",
              "longType": "SearchHit",
              "fullType": "tigrisdata.v1.SearchHit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ImportRequest",
          "longName": "ImportRequest",
          "fullName": "tigrisdata.v1.ImportRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to import documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name where to import documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "documents",
              "description": "Array of documents to import. Each document is a JSON object.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "ImportRequestOptions",
              "longType": "ImportRequestOptions",
              "fullType": "tigrisdata.v1.ImportRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "create_collection",
              "description": "Allow to create collection if it doesn't exists",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "primary_key",
              "description": "List of fields which constitutes primary key of the collection\n\nIf not specified and field with name 'id' is present,\nit's used as a primary key, further if inferred type is\nUUID, then it's set as autogenerated.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "autogenerated",
              "description": "The list of autogenerated fields of the collection",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ImportRequestOptions",
          "longName": "ImportRequestOptions",
          "fullName": "tigrisdata.v1.ImportRequestOptions",
          "description": "additional options for import requests.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "write_options",
              "description": "",
              "label": "",
              "type": "WriteOptions",
              "longType": "WriteOptions",
              "fullType": "tigrisdata.v1.WriteOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ImportResponse",
          "longName": "ImportResponse",
          "fullName": "tigrisdata.v1.ImportResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"inserted\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "keys",
              "description": "an array returns the value of the primary keys.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InsertRequest",
          "longName": "InsertRequest",
          "fullName": "tigrisdata.v1.InsertRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to insert documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name where to insert documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "documents",
              "description": "Array of documents to insert. Each document is a JSON object.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "InsertRequestOptions",
              "longType": "InsertRequestOptions",
              "fullType": "tigrisdata.v1.InsertRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InsertRequestOptions",
          "longName": "InsertRequestOptions",
          "fullName": "tigrisdata.v1.InsertRequestOptions",
          "description": "additional options for insert requests.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "write_options",
              "description": "",
              "label": "",
              "type": "WriteOptions",
              "longType": "WriteOptions",
              "fullType": "tigrisdata.v1.WriteOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InsertResponse",
          "longName": "InsertResponse",
          "fullName": "tigrisdata.v1.InsertResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"inserted\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "keys",
              "description": "an array returns the value of the primary keys.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAppKeysRequest",
          "longName": "ListAppKeysRequest",
          "fullName": "tigrisdata.v1.ListAppKeysRequest",
          "description": "Request listing of all the app keys those are visible to requesting actor",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name filter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key_type",
              "description": "Optionally the key type one of [credentials, api_key]. Defaults to credentials",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_key_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAppKeysResponse",
          "longName": "ListAppKeysResponse",
          "fullName": "tigrisdata.v1.ListAppKeysResponse",
          "description": "ListAppKeysResponse returns one or more visible app keys to user",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "app_keys",
              "description": "",
              "label": "repeated",
              "type": "AppKey",
              "longType": "AppKey",
              "fullType": "tigrisdata.v1.AppKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListBranchesRequest",
          "longName": "ListBranchesRequest",
          "fullName": "tigrisdata.v1.ListBranchesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "List database branches in this project",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListBranchesResponse",
          "longName": "ListBranchesResponse",
          "fullName": "tigrisdata.v1.ListBranchesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "branches",
              "description": "List of all the branches in this database",
              "label": "repeated",
              "type": "BranchInfo",
              "longType": "BranchInfo",
              "fullType": "tigrisdata.v1.BranchInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCollectionsRequest",
          "longName": "ListCollectionsRequest",
          "fullName": "tigrisdata.v1.ListCollectionsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to list collections.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "CollectionOptions",
              "longType": "CollectionOptions",
              "fullType": "tigrisdata.v1.CollectionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCollectionsResponse",
          "longName": "ListCollectionsResponse",
          "fullName": "tigrisdata.v1.ListCollectionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collections",
              "description": "List of the collections info in the database.",
              "label": "repeated",
              "type": "CollectionInfo",
              "longType": "CollectionInfo",
              "fullType": "tigrisdata.v1.CollectionInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListGlobalAppKeysRequest",
          "longName": "ListGlobalAppKeysRequest",
          "fullName": "tigrisdata.v1.ListGlobalAppKeysRequest",
          "description": "Request listing of all the global app keys those are visible to requesting actor",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListGlobalAppKeysResponse",
          "longName": "ListGlobalAppKeysResponse",
          "fullName": "tigrisdata.v1.ListGlobalAppKeysResponse",
          "description": "ListGlobalAppKeysResponse returns one or more visible global app keys to user",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "app_keys",
              "description": "",
              "label": "repeated",
              "type": "GlobalAppKey",
              "longType": "GlobalAppKey",
              "fullType": "tigrisdata.v1.GlobalAppKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListProjectsRequest",
          "longName": "ListProjectsRequest",
          "fullName": "tigrisdata.v1.ListProjectsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListProjectsResponse",
          "longName": "ListProjectsResponse",
          "fullName": "tigrisdata.v1.ListProjectsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "projects",
              "description": "List of the projects.",
              "label": "repeated",
              "type": "ProjectInfo",
              "longType": "ProjectInfo",
              "fullType": "tigrisdata.v1.ProjectInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Match",
          "longName": "Match",
          "fullName": "tigrisdata.v1.Match",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "fields",
              "description": "",
              "label": "repeated",
              "type": "MatchField",
              "longType": "MatchField",
              "fullType": "tigrisdata.v1.MatchField",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vector_distance",
              "description": "",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_vector_distance",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MatchField",
          "longName": "MatchField",
          "fullName": "tigrisdata.v1.MatchField",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Page",
          "longName": "Page",
          "fullName": "tigrisdata.v1.Page",
          "description": "Pagination metadata for SearchResponse",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current",
              "description": "Number representing the current page of results",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Maximum number of results per page",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProjectDescription",
          "longName": "ProjectDescription",
          "fullName": "tigrisdata.v1.ProjectDescription",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ProjectInfo",
          "longName": "ProjectInfo",
          "fullName": "tigrisdata.v1.ProjectInfo",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the Project.",
              "label": "",
              "type": "ProjectMetadata",
              "longType": "ProjectMetadata",
              "fullType": "tigrisdata.v1.ProjectMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "limits",
              "description": "optional limits associated with the project",
              "label": "",
              "type": "ProjectLimits",
              "longType": "ProjectLimits",
              "fullType": "tigrisdata.v1.ProjectLimits",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProjectLimits",
          "longName": "ProjectLimits",
          "fullName": "tigrisdata.v1.ProjectLimits",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "max_collections",
              "description": "maximum number of collections in the Project",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max_collections",
              "defaultValue": ""
            },
            {
              "name": "max_search_indexes",
              "description": "maximum number of search indexes in the Project",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max_search_indexes",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProjectMetadata",
          "longName": "ProjectMetadata",
          "fullName": "tigrisdata.v1.ProjectMetadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ProjectOptions",
          "longName": "ProjectOptions",
          "fullName": "tigrisdata.v1.ProjectOptions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "limits",
              "description": "optional limits and capacity configuration",
              "label": "optional",
              "type": "ProjectLimits",
              "longType": "ProjectLimits",
              "fullType": "tigrisdata.v1.ProjectLimits",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limits",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReadRequest",
          "longName": "ReadRequest",
          "fullName": "tigrisdata.v1.ReadRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to read documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name to read documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Returns documents matching this filter. A filter can simply be a key, value pair where a key is the field name and the value would be the value for this field.\nTigris also allows complex filtering by passing logical expressions. Logical filters are applied on two or more fields using `$or` and `$and`.\nA few examples of filters:\n\u003cli\u003e To read a user document where the id has a value 1: ```{\"id\": 1 }```\n\u003cli\u003e To read all the user documents where the key \"id\" has a value 1 or 2 or 3: `{\"$or\": [{\"id\": 1}, {\"id\": 2}, {\"id\": 3}]}`\nFilter allows setting collation on an individual field level. To set collation for all the fields see options.\nThe detailed documentation of the filter is \u003ca href=\"https://docs.tigrisdata.com/overview/query#specification-1\" title=\"here\"\u003ehere\u003c/a\u003e.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "To read specific fields from a document. Default is all.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "Options that can be used to modify the results, for example `limit` to control the number of documents\nreturned by the server.",
              "label": "",
              "type": "ReadRequestOptions",
              "longType": "ReadRequestOptions",
              "fullType": "tigrisdata.v1.ReadRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sort",
              "description": "Array of fields and corresponding sort orders to order the results. Ex: 1 `[{ \"salary\": \"$desc\" }]`, Ex: 2  `[{ \"salary\": \"$asc\"}]`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReadRequestOptions",
          "longName": "ReadRequestOptions",
          "fullName": "tigrisdata.v1.ReadRequestOptions",
          "description": "Options that can be used to modify the results, for example \"limit\" to control the number of documents\nreturned by the server.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "limit",
              "description": "Limit the number of documents returned by the read operation.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "skip",
              "description": "Number of documents to skip before starting to return resulting documents.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offset",
              "description": "A cursor for use in pagination. The next streams will return documents after this offset.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collation",
              "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
              "label": "",
              "type": "Collation",
              "longType": "Collation",
              "fullType": "tigrisdata.v1.Collation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReadResponse",
          "longName": "ReadResponse",
          "fullName": "tigrisdata.v1.ReadResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Object containing the collection document.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "resume_token",
              "description": "An internal key, used for pagination.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReplaceRequest",
          "longName": "ReplaceRequest",
          "fullName": "tigrisdata.v1.ReplaceRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to replace documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name where to replace documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "documents",
              "description": "Array of documents to be replaced. Each document is a JSON object.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "ReplaceRequestOptions",
              "longType": "ReplaceRequestOptions",
              "fullType": "tigrisdata.v1.ReplaceRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReplaceRequestOptions",
          "longName": "ReplaceRequestOptions",
          "fullName": "tigrisdata.v1.ReplaceRequestOptions",
          "description": "Additional options for replace requests.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "write_options",
              "description": "",
              "label": "",
              "type": "WriteOptions",
              "longType": "WriteOptions",
              "fullType": "tigrisdata.v1.WriteOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReplaceResponse",
          "longName": "ReplaceResponse",
          "fullName": "tigrisdata.v1.ReplaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "an enum with value set as \"replaced\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "keys",
              "description": "an array returns the value of the primary keys.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResponseMetadata",
          "longName": "ResponseMetadata",
          "fullName": "tigrisdata.v1.ResponseMetadata",
          "description": "Has metadata related to the documents stored.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "created_at",
              "description": "Time at which the document was inserted/replaced. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Time at which the document was updated. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deleted_at",
              "description": "Time at which the document was deleted. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RollbackTransactionRequest",
          "longName": "RollbackTransactionRequest",
          "fullName": "tigrisdata.v1.RollbackTransactionRequest",
          "description": "Rollback transaction with the given ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose DB this transaction belongs to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RollbackTransactionResponse",
          "longName": "RollbackTransactionResponse",
          "fullName": "tigrisdata.v1.RollbackTransactionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "Status of rollback transaction operation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RotateAppKeyRequest",
          "longName": "RotateAppKeyRequest",
          "fullName": "tigrisdata.v1.RotateAppKeyRequest",
          "description": "Request rotation of an app key secret",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "app key id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "project",
              "description": "project name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RotateAppKeyResponse",
          "longName": "RotateAppKeyResponse",
          "fullName": "tigrisdata.v1.RotateAppKeyResponse",
          "description": "RotateAppKeyResponse returns the new app key with rotated secret",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "app_key",
              "description": "A new app key with rotated secret.",
              "label": "",
              "type": "AppKey",
              "longType": "AppKey",
              "fullType": "tigrisdata.v1.AppKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RotateGlobalAppKeySecretRequest",
          "longName": "RotateGlobalAppKeySecretRequest",
          "fullName": "tigrisdata.v1.RotateGlobalAppKeySecretRequest",
          "description": "Request rotation of an app key secret",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "global app key id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RotateGlobalAppKeySecretResponse",
          "longName": "RotateGlobalAppKeySecretResponse",
          "fullName": "tigrisdata.v1.RotateGlobalAppKeySecretResponse",
          "description": "RotateGlobalAppKeySecretResponse returns the new app key with rotated secret",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "app_key",
              "description": "A new global app key with rotated secret.",
              "label": "",
              "type": "GlobalAppKey",
              "longType": "GlobalAppKey",
              "fullType": "tigrisdata.v1.GlobalAppKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchFacet",
          "longName": "SearchFacet",
          "fullName": "tigrisdata.v1.SearchFacet",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "counts",
              "description": "",
              "label": "repeated",
              "type": "FacetCount",
              "longType": "FacetCount",
              "fullType": "tigrisdata.v1.FacetCount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stats",
              "description": "",
              "label": "",
              "type": "FacetStats",
              "longType": "FacetStats",
              "fullType": "tigrisdata.v1.FacetStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchHit",
          "longName": "SearchHit",
          "fullName": "tigrisdata.v1.SearchHit",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Actual search document",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Has metadata related to the search hit",
              "label": "",
              "type": "SearchHitMeta",
              "longType": "SearchHitMeta",
              "fullType": "tigrisdata.v1.SearchHitMeta",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchHitMeta",
          "longName": "SearchHitMeta",
          "fullName": "tigrisdata.v1.SearchHitMeta",
          "description": "Contains metadata related to the search hit, has information about document created_at/updated_at as well.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "created_at",
              "description": "Time at which the document was inserted/replaced. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Time at which the document was updated. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "match",
              "description": "Match has the information about the matching document like the matched field, etc",
              "label": "",
              "type": "Match",
              "longType": "Match",
              "fullType": "tigrisdata.v1.Match",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchMetadata",
          "longName": "SearchMetadata",
          "fullName": "tigrisdata.v1.SearchMetadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "found",
              "description": "Total number of search results across all pages",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_pages",
              "description": "Number representing the total pages of results",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page",
              "description": "",
              "label": "",
              "type": "Page",
              "longType": "Page",
              "fullType": "tigrisdata.v1.Page",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "matched_fields",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchRequest",
          "longName": "SearchRequest",
          "fullName": "tigrisdata.v1.SearchRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target to search documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name to search documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "q",
              "description": "Query string for searching across text fields",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "search_fields",
              "description": "Array of fields to project search query against",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Filter stacks on top of query results to further narrow down the results. Similar to `ReadRequest.filter`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "facet",
              "description": "Facet query to aggregate results on given fields. The field name for the facet search can be passed like this `{\"brand\": { \"size\": 10 }}`\nwhere the size controls the total facets for this field.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sort",
              "description": "Array of fields and corresponding sort orders to order the results `[{ \"salary\": \"$desc\" }]`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "include_fields",
              "description": "Array of document field names to include in results. By default, all fields are included.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exclude_fields",
              "description": "Array of document field names to exclude from results. `include_fields`, if specified, takes precedence over `exclude_fields`.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_size",
              "description": "Optionally can set the number of hits to be returned per page, default is 20.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page",
              "description": "Optionally can specify the page to retrieve. If page is set then only hits for this page is returned",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collation",
              "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
              "label": "",
              "type": "Collation",
              "longType": "Collation",
              "fullType": "tigrisdata.v1.Collation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "group_by",
              "description": "Group by can be used to group search results. For example, to group by city field the\nsyntax would be: `{ \"fields\": [\"city\"]}`. Optionally a grouping limit can be set. By default it is 3 per group.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vector",
              "description": "Vector is an object that is used for vector search. For example, to vector search on a \"vec\" field the\nsyntax would be: `{ \"vec\": [0.34, 0.12, 0.95], \"top_k\": 10}`.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchResponse",
          "longName": "SearchResponse",
          "fullName": "tigrisdata.v1.SearchResponse",
          "description": "Response struct for search",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hits",
              "description": "",
              "label": "repeated",
              "type": "SearchHit",
              "longType": "SearchHit",
              "fullType": "tigrisdata.v1.SearchHit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "facets",
              "description": "",
              "label": "repeated",
              "type": "FacetsEntry",
              "longType": "SearchResponse.FacetsEntry",
              "fullType": "tigrisdata.v1.SearchResponse.FacetsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "meta",
              "description": "",
              "label": "",
              "type": "SearchMetadata",
              "longType": "SearchMetadata",
              "fullType": "tigrisdata.v1.SearchMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "group",
              "description": "Group is returned when group_by is used in the search request. In this case the above hits will be empty and\nhits are returned by the group keys.",
              "label": "repeated",
              "type": "GroupedSearchHits",
              "longType": "GroupedSearchHits",
              "fullType": "tigrisdata.v1.GroupedSearchHits",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FacetsEntry",
          "longName": "SearchResponse.FacetsEntry",
          "fullName": "tigrisdata.v1.SearchResponse.FacetsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "SearchFacet",
              "longType": "SearchFacet",
              "fullType": "tigrisdata.v1.SearchFacet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionCtx",
          "longName": "TransactionCtx",
          "fullName": "tigrisdata.v1.TransactionCtx",
          "description": "Contains ID which uniquely identifies transaction\nThis context is returned by BeginTransaction request and\nshould be passed in the metadata (headers) of subsequent requests\nin order to run them in the context of the same transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique for a single transactional request.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "origin",
              "description": "Serves as an internal identifier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionOptions",
          "longName": "TransactionOptions",
          "fullName": "tigrisdata.v1.TransactionOptions",
          "description": "Options that can be used to modify the transaction semantics.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "UpdateAppKeyRequest",
          "longName": "UpdateAppKeyRequest",
          "fullName": "tigrisdata.v1.UpdateAppKeyRequest",
          "description": "To update the description of the app key",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "app key id - this is not allowed to update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "project",
              "description": "project name -  this is not allowed to update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "A new human readable app name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A new human readable app description",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateAppKeyResponse",
          "longName": "UpdateAppKeyResponse",
          "fullName": "tigrisdata.v1.UpdateAppKeyResponse",
          "description": "Returns response for updating the app key description",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "updated_app_key",
              "description": "updated app key object",
              "label": "",
              "type": "AppKey",
              "longType": "AppKey",
              "fullType": "tigrisdata.v1.AppKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateGlobalAppKeyRequest",
          "longName": "UpdateGlobalAppKeyRequest",
          "fullName": "tigrisdata.v1.UpdateGlobalAppKeyRequest",
          "description": "To update the description of the global app key",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "app key id - this is not allowed to update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "A new human readable app name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A new human readable app description",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateGlobalAppKeyResponse",
          "longName": "UpdateGlobalAppKeyResponse",
          "fullName": "tigrisdata.v1.UpdateGlobalAppKeyResponse",
          "description": "Returns response for updating the global app key description",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "updated_app_key",
              "description": "updated global app key object",
              "label": "",
              "type": "GlobalAppKey",
              "longType": "GlobalAppKey",
              "fullType": "tigrisdata.v1.GlobalAppKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateProjectRequest",
          "longName": "UpdateProjectRequest",
          "fullName": "tigrisdata.v1.UpdateProjectRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Update project with this name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "project configuration to update",
              "label": "",
              "type": "ProjectOptions",
              "longType": "ProjectOptions",
              "fullType": "tigrisdata.v1.ProjectOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateProjectResponse",
          "longName": "UpdateProjectResponse",
          "fullName": "tigrisdata.v1.UpdateProjectResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"updated\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateRequest",
          "longName": "UpdateRequest",
          "fullName": "tigrisdata.v1.UpdateRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "project",
              "description": "Project name whose db is under target  to update documents",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name where to update documents",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "Fields contains set of fields\nwith the values which need to be updated.\nShould be proper JSON object.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Update documents which matching specified filter.\nA filter can simply be key, value where key\nis the field name and value would be the value for this field. Or a filter can be logical where\ntwo or more fields can be logically joined using $or and $and. A few examples of filter:\n\u003cli\u003e To update a user document where the id has a value 1: ```{\"id\": 1 }```\n\u003cli\u003e To update all the user documents where the key \"id\" has a value 1 or 2 or 3: `{\"$or\": [{\"id\": 1}, {\"id\": 2}, {\"id\": 3}]}`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "UpdateRequestOptions",
              "longType": "UpdateRequestOptions",
              "fullType": "tigrisdata.v1.UpdateRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "Optionally specify a database branch name to perform operation on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateRequestOptions",
          "longName": "UpdateRequestOptions",
          "fullName": "tigrisdata.v1.UpdateRequestOptions",
          "description": "Additional options for update requests.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "write_options",
              "description": "",
              "label": "",
              "type": "WriteOptions",
              "longType": "WriteOptions",
              "fullType": "tigrisdata.v1.WriteOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collation",
              "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
              "label": "",
              "type": "Collation",
              "longType": "Collation",
              "fullType": "tigrisdata.v1.Collation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Limit the number of documents to be updated",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateResponse",
          "longName": "UpdateResponse",
          "fullName": "tigrisdata.v1.UpdateResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "modified_count",
              "description": "Returns the number of documents modified.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "an enum with value set as \"updated\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WriteOptions",
          "longName": "WriteOptions",
          "fullName": "tigrisdata.v1.WriteOptions",
          "description": "Additional options to modify write requests.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "Tigris",
          "longName": "Tigris",
          "fullName": "tigrisdata.v1.Tigris",
          "description": "",
          "methods": [
            {
              "name": "BeginTransaction",
              "description": "Starts a new transaction and returns a transactional object. All reads/writes performed\nwithin a transaction will run with serializable isolation. Tigris offers global transactions,\nwith ACID properties and strict serializability.",
              "requestType": "BeginTransactionRequest",
              "requestLongType": "BeginTransactionRequest",
              "requestFullType": "tigrisdata.v1.BeginTransactionRequest",
              "requestStreaming": false,
              "responseType": "BeginTransactionResponse",
              "responseLongType": "BeginTransactionResponse",
              "responseFullType": "tigrisdata.v1.BeginTransactionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/transactions/begin",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CommitTransaction",
              "description": "Atomically commit all the changes performed in the context of the transaction. Commit provides all\nor nothing semantics by ensuring no partial updates are in the project due to a transaction failure.",
              "requestType": "CommitTransactionRequest",
              "requestLongType": "CommitTransactionRequest",
              "requestFullType": "tigrisdata.v1.CommitTransactionRequest",
              "requestStreaming": false,
              "responseType": "CommitTransactionResponse",
              "responseLongType": "CommitTransactionResponse",
              "responseFullType": "tigrisdata.v1.CommitTransactionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/transactions/commit",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "RollbackTransaction",
              "description": "Rollback transaction discards all the changes\nperformed in the transaction",
              "requestType": "RollbackTransactionRequest",
              "requestLongType": "RollbackTransactionRequest",
              "requestFullType": "tigrisdata.v1.RollbackTransactionRequest",
              "requestStreaming": false,
              "responseType": "RollbackTransactionResponse",
              "responseLongType": "RollbackTransactionResponse",
              "responseFullType": "tigrisdata.v1.RollbackTransactionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/transactions/rollback",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Insert",
              "description": "Inserts new documents in the collection and returns an AlreadyExists error if any of the documents\nin the request already exists. Insert provides idempotency by returning an error if the document\nalready exists. To replace documents, use REPLACE API instead of INSERT.",
              "requestType": "InsertRequest",
              "requestLongType": "InsertRequest",
              "requestFullType": "tigrisdata.v1.InsertRequest",
              "requestStreaming": false,
              "responseType": "InsertResponse",
              "responseLongType": "InsertResponse",
              "responseFullType": "tigrisdata.v1.InsertResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/insert",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Replace",
              "description": "Inserts the documents or replaces the existing documents in the collections. All the operations\nare executed in the context of a transaction and provides all-or-nothing semantics.",
              "requestType": "ReplaceRequest",
              "requestLongType": "ReplaceRequest",
              "requestFullType": "tigrisdata.v1.ReplaceRequest",
              "requestStreaming": false,
              "responseType": "ReplaceResponse",
              "responseLongType": "ReplaceResponse",
              "responseFullType": "tigrisdata.v1.ReplaceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PUT",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/replace",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Delete",
              "description": "Delete a range of documents in the collection using the condition provided in the filter. No partial deletes\nare possible as the API provides ACID semantics.",
              "requestType": "DeleteRequest",
              "requestLongType": "DeleteRequest",
              "requestFullType": "tigrisdata.v1.DeleteRequest",
              "requestStreaming": false,
              "responseType": "DeleteResponse",
              "responseLongType": "DeleteResponse",
              "responseFullType": "tigrisdata.v1.DeleteResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/delete",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Update",
              "description": "Update a range of documents in the collection using the condition provided in the filter. No partial updates\nare possible as the API provides ACID semantics.",
              "requestType": "UpdateRequest",
              "requestLongType": "UpdateRequest",
              "requestFullType": "tigrisdata.v1.UpdateRequest",
              "requestStreaming": false,
              "responseType": "UpdateResponse",
              "responseLongType": "UpdateResponse",
              "responseFullType": "tigrisdata.v1.UpdateResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PUT",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/update",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Read",
              "description": "Reads a range of documents from the collection. An empty filter will trigger reading all the documents\ninside this collection. The API supports pagination that can be used by passing `Limit/Skip` parameters.\nThe `skip` parameter skips the number of documents from the start and the `limit` parameter is used to\nspecify the number of documents to read. You can find more detailed documentations of the Read API\n\u003ca href=\"https://docs.tigrisdata.com/overview/query\" title=\"here\"\u003ehere\u003c/a\u003e. This API is streaming\nas it allows continuous transmission of documents between the server and the client, with no need for\nthe client to wait for a complete response before processing the data.",
              "requestType": "ReadRequest",
              "requestLongType": "ReadRequest",
              "requestFullType": "tigrisdata.v1.ReadRequest",
              "requestStreaming": false,
              "responseType": "ReadResponse",
              "responseLongType": "ReadResponse",
              "responseFullType": "tigrisdata.v1.ReadResponse",
              "responseStreaming": true,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/read",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Count",
              "description": "Count returns the number of documents in the collection. The filter parameter\ncan be used to select which documents contribute to the count. An empty filter means\ncount all documents in the collection.",
              "requestType": "CountRequest",
              "requestLongType": "CountRequest",
              "requestFullType": "tigrisdata.v1.CountRequest",
              "requestStreaming": false,
              "responseType": "CountResponse",
              "responseLongType": "CountResponse",
              "responseFullType": "tigrisdata.v1.CountResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/count",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "BuildCollectionIndex",
              "description": "Reads all the documents in the collection and rebuild the secondary indexes for this collection.",
              "requestType": "BuildCollectionIndexRequest",
              "requestLongType": "BuildCollectionIndexRequest",
              "requestFullType": "tigrisdata.v1.BuildCollectionIndexRequest",
              "requestStreaming": false,
              "responseType": "BuildCollectionIndexResponse",
              "responseLongType": "BuildCollectionIndexResponse",
              "responseFullType": "tigrisdata.v1.BuildCollectionIndexResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/index",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "BuildSearchIndex",
              "description": "Reads all the documents in the collection and rebuild the search index for this collection.",
              "requestType": "BuildCollectionSearchIndexRequest",
              "requestLongType": "BuildCollectionSearchIndexRequest",
              "requestFullType": "tigrisdata.v1.BuildCollectionSearchIndexRequest",
              "requestStreaming": false,
              "responseType": "BuildCollectionSearchIndexResponse",
              "responseLongType": "BuildCollectionSearchIndexResponse",
              "responseFullType": "tigrisdata.v1.BuildCollectionSearchIndexResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/search/index",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Explain",
              "description": "Explain takes the same parameters as Read and returns how the Tigris Query Planner would process the\nresponse",
              "requestType": "ReadRequest",
              "requestLongType": "ReadRequest",
              "requestFullType": "tigrisdata.v1.ReadRequest",
              "requestStreaming": false,
              "responseType": "ExplainResponse",
              "responseLongType": "ExplainResponse",
              "responseFullType": "tigrisdata.v1.ExplainResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/explain",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Search",
              "description": "Searches a collection for the documents matching the query. A search can be a term search, phrase search\nor a vector search. Search API allows filtering the result set using filters as documented\n\u003ca href=\"https://docs.tigrisdata.com/overview/query#specification-1\" title=\"here\"\u003ehere\u003c/a\u003e. You can also\nperform a faceted search by passing the fields in the facet parameter. You can find more detailed documentation\nof the Search API with multiple examples \u003ca href=\"https://docs.tigrisdata.com/overview/search\" title=\"here\"\u003ehere\u003c/a\u003e.\nThis API is streaming which means a page as soon as it is processed is pushed to the client immediately.",
              "requestType": "SearchRequest",
              "requestLongType": "SearchRequest",
              "requestFullType": "tigrisdata.v1.SearchRequest",
              "requestStreaming": false,
              "responseType": "SearchResponse",
              "responseLongType": "SearchResponse",
              "responseFullType": "tigrisdata.v1.SearchResponse",
              "responseStreaming": true,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/search",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Import",
              "description": "Imports documents into the collection.\n\nIt automatically:\n * Detects the schema of the documents in the batch\n * Evolves the schema as soon as it's backward compatible\n * Creates collection with inferred schema (if requested)",
              "requestType": "ImportRequest",
              "requestLongType": "ImportRequest",
              "requestFullType": "tigrisdata.v1.ImportRequest",
              "requestStreaming": false,
              "responseType": "ImportResponse",
              "responseLongType": "ImportResponse",
              "responseFullType": "tigrisdata.v1.ImportResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/documents/import",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateOrUpdateCollection",
              "description": "Creates a new collection or atomically upgrades the collection to the new schema provided in the request.\nSchema changes are applied atomically and immediately without any downtime.",
              "requestType": "CreateOrUpdateCollectionRequest",
              "requestLongType": "CreateOrUpdateCollectionRequest",
              "requestFullType": "tigrisdata.v1.CreateOrUpdateCollectionRequest",
              "requestStreaming": false,
              "responseType": "CreateOrUpdateCollectionResponse",
              "responseLongType": "CreateOrUpdateCollectionResponse",
              "responseFullType": "tigrisdata.v1.CreateOrUpdateCollectionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/createOrUpdate",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateOrUpdateCollections",
              "description": "Similar to creating a single collection, this API performs batch creation or upgrade of collections. An error is\nreturned as soon as first operation in the batch fails. This API is not atomic i.e. each operation is performed\nindividually and in the serial order.",
              "requestType": "CreateOrUpdateCollectionsRequest",
              "requestLongType": "CreateOrUpdateCollectionsRequest",
              "requestFullType": "tigrisdata.v1.CreateOrUpdateCollectionsRequest",
              "requestStreaming": false,
              "responseType": "CreateOrUpdateCollectionsResponse",
              "responseLongType": "CreateOrUpdateCollectionsResponse",
              "responseFullType": "tigrisdata.v1.CreateOrUpdateCollectionsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/createOrUpdate",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DropCollection",
              "description": "Drops the collection inside this project. This API deletes all of the\ndocuments inside this collection and any metadata associated with it.",
              "requestType": "DropCollectionRequest",
              "requestLongType": "DropCollectionRequest",
              "requestFullType": "tigrisdata.v1.DropCollectionRequest",
              "requestStreaming": false,
              "responseType": "DropCollectionResponse",
              "responseLongType": "DropCollectionResponse",
              "responseFullType": "tigrisdata.v1.DropCollectionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/drop",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListProjects",
              "description": "List returns all the projects.",
              "requestType": "ListProjectsRequest",
              "requestLongType": "ListProjectsRequest",
              "requestFullType": "tigrisdata.v1.ListProjectsRequest",
              "requestStreaming": false,
              "responseType": "ListProjectsResponse",
              "responseLongType": "ListProjectsResponse",
              "responseFullType": "tigrisdata.v1.ListProjectsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/projects"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListCollections",
              "description": "List all the collections present in the project passed in the request.",
              "requestType": "ListCollectionsRequest",
              "requestLongType": "ListCollectionsRequest",
              "requestFullType": "tigrisdata.v1.ListCollectionsRequest",
              "requestStreaming": false,
              "responseType": "ListCollectionsResponse",
              "responseLongType": "ListCollectionsResponse",
              "responseFullType": "tigrisdata.v1.ListCollectionsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/projects/{project}/database/collections"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateProject",
              "description": "Creates a new project. An AlreadyExists error with a status code 409 is returned if the project already exists.",
              "requestType": "CreateProjectRequest",
              "requestLongType": "CreateProjectRequest",
              "requestFullType": "tigrisdata.v1.CreateProjectRequest",
              "requestStreaming": false,
              "responseType": "CreateProjectResponse",
              "responseLongType": "CreateProjectResponse",
              "responseFullType": "tigrisdata.v1.CreateProjectResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/create",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeleteProject",
              "description": "Delete Project deletes all the collections in this project along with all of the documents,\nand associated metadata for these collections.",
              "requestType": "DeleteProjectRequest",
              "requestLongType": "DeleteProjectRequest",
              "requestFullType": "tigrisdata.v1.DeleteProjectRequest",
              "requestStreaming": false,
              "responseType": "DeleteProjectResponse",
              "responseLongType": "DeleteProjectResponse",
              "responseFullType": "tigrisdata.v1.DeleteProjectResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/projects/{project}/delete",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateProject",
              "description": "Update Project configuration and metadata",
              "requestType": "UpdateProjectRequest",
              "requestLongType": "UpdateProjectRequest",
              "requestFullType": "tigrisdata.v1.UpdateProjectRequest",
              "requestStreaming": false,
              "responseType": "UpdateProjectResponse",
              "responseLongType": "UpdateProjectResponse",
              "responseFullType": "tigrisdata.v1.UpdateProjectResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PUT",
                      "pattern": "/v1/projects/{project}/update",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DescribeDatabase",
              "description": "This API returns information related to the project along with all the collections inside the project.\nThis can be used to retrieve the schemas or the size of the project which means size of all the database\nbranches and the size of all the collections present in this project.",
              "requestType": "DescribeDatabaseRequest",
              "requestLongType": "DescribeDatabaseRequest",
              "requestFullType": "tigrisdata.v1.DescribeDatabaseRequest",
              "requestStreaming": false,
              "responseType": "DescribeDatabaseResponse",
              "responseLongType": "DescribeDatabaseResponse",
              "responseFullType": "tigrisdata.v1.DescribeDatabaseResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/describe",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateBranch",
              "description": "Creates a new database branch, if not already existing.",
              "requestType": "CreateBranchRequest",
              "requestLongType": "CreateBranchRequest",
              "requestFullType": "tigrisdata.v1.CreateBranchRequest",
              "requestStreaming": false,
              "responseType": "CreateBranchResponse",
              "responseLongType": "CreateBranchResponse",
              "responseFullType": "tigrisdata.v1.CreateBranchResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/branches/{branch}/create",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeleteBranch",
              "description": "Deletes a database branch, if exists.\nThrows 400 Bad Request if \"main\" branch is being deleted",
              "requestType": "DeleteBranchRequest",
              "requestLongType": "DeleteBranchRequest",
              "requestFullType": "tigrisdata.v1.DeleteBranchRequest",
              "requestStreaming": false,
              "responseType": "DeleteBranchResponse",
              "responseLongType": "DeleteBranchResponse",
              "responseFullType": "tigrisdata.v1.DeleteBranchResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/projects/{project}/database/branches/{branch}/delete",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListBranches",
              "description": "List database branches",
              "requestType": "ListBranchesRequest",
              "requestLongType": "ListBranchesRequest",
              "requestFullType": "tigrisdata.v1.ListBranchesRequest",
              "requestStreaming": false,
              "responseType": "ListBranchesResponse",
              "responseLongType": "ListBranchesResponse",
              "responseFullType": "tigrisdata.v1.ListBranchesResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/projects/{project}/database/branches"
                    }
                  ]
                }
              }
            },
            {
              "name": "DescribeCollection",
              "description": "Returns the information related to the collection. This can be used to retrieve the schema or size of the collection.",
              "requestType": "DescribeCollectionRequest",
              "requestLongType": "DescribeCollectionRequest",
              "requestFullType": "tigrisdata.v1.DescribeCollectionRequest",
              "requestStreaming": false,
              "responseType": "DescribeCollectionResponse",
              "responseLongType": "DescribeCollectionResponse",
              "responseFullType": "tigrisdata.v1.DescribeCollectionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/database/collections/{collection}/describe",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateGlobalAppKey",
              "description": "Create a global app key. These keys can be used to operate on any project inside your account.",
              "requestType": "CreateGlobalAppKeyRequest",
              "requestLongType": "CreateGlobalAppKeyRequest",
              "requestFullType": "tigrisdata.v1.CreateGlobalAppKeyRequest",
              "requestStreaming": false,
              "responseType": "CreateGlobalAppKeyResponse",
              "responseLongType": "CreateGlobalAppKeyResponse",
              "responseFullType": "tigrisdata.v1.CreateGlobalAppKeyResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/apps/keys/create",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateGlobalAppKey",
              "description": "Update the description of the global app key.",
              "requestType": "UpdateGlobalAppKeyRequest",
              "requestLongType": "UpdateGlobalAppKeyRequest",
              "requestFullType": "tigrisdata.v1.UpdateGlobalAppKeyRequest",
              "requestStreaming": false,
              "responseType": "UpdateGlobalAppKeyResponse",
              "responseLongType": "UpdateGlobalAppKeyResponse",
              "responseFullType": "tigrisdata.v1.UpdateGlobalAppKeyResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PUT",
                      "pattern": "/v1/apps/keys/update",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeleteGlobalAppKey",
              "description": "Delete the global app key.",
              "requestType": "DeleteGlobalAppKeyRequest",
              "requestLongType": "DeleteGlobalAppKeyRequest",
              "requestFullType": "tigrisdata.v1.DeleteGlobalAppKeyRequest",
              "requestStreaming": false,
              "responseType": "DeleteGlobalAppKeyResponse",
              "responseLongType": "DeleteGlobalAppKeyResponse",
              "responseFullType": "tigrisdata.v1.DeleteGlobalAppKeyResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/apps/keys/delete",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListGlobalAppKeys",
              "description": "Lists all the global app keys visible to requesting actor.",
              "requestType": "ListGlobalAppKeysRequest",
              "requestLongType": "ListGlobalAppKeysRequest",
              "requestFullType": "tigrisdata.v1.ListGlobalAppKeysRequest",
              "requestStreaming": false,
              "responseType": "ListGlobalAppKeysResponse",
              "responseLongType": "ListGlobalAppKeysResponse",
              "responseFullType": "tigrisdata.v1.ListGlobalAppKeysResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/apps/keys"
                    }
                  ]
                }
              }
            },
            {
              "name": "RotateGlobalAppKeySecret",
              "description": "Endpoint is used to rotate the secret for the app key.",
              "requestType": "RotateGlobalAppKeySecretRequest",
              "requestLongType": "RotateGlobalAppKeySecretRequest",
              "requestFullType": "tigrisdata.v1.RotateGlobalAppKeySecretRequest",
              "requestStreaming": false,
              "responseType": "RotateGlobalAppKeySecretResponse",
              "responseLongType": "RotateGlobalAppKeySecretResponse",
              "responseFullType": "tigrisdata.v1.RotateGlobalAppKeySecretResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/apps/keys/rotate",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateAppKey",
              "description": "Create an app key.",
              "requestType": "CreateAppKeyRequest",
              "requestLongType": "CreateAppKeyRequest",
              "requestFullType": "tigrisdata.v1.CreateAppKeyRequest",
              "requestStreaming": false,
              "responseType": "CreateAppKeyResponse",
              "responseLongType": "CreateAppKeyResponse",
              "responseFullType": "tigrisdata.v1.CreateAppKeyResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/apps/keys/create",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateAppKey",
              "description": "Update the description of an app key.",
              "requestType": "UpdateAppKeyRequest",
              "requestLongType": "UpdateAppKeyRequest",
              "requestFullType": "tigrisdata.v1.UpdateAppKeyRequest",
              "requestStreaming": false,
              "responseType": "UpdateAppKeyResponse",
              "responseLongType": "UpdateAppKeyResponse",
              "responseFullType": "tigrisdata.v1.UpdateAppKeyResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/apps/keys/update",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeleteAppKey",
              "description": "Delete an app key.",
              "requestType": "DeleteAppKeyRequest",
              "requestLongType": "DeleteAppKeyRequest",
              "requestFullType": "tigrisdata.v1.DeleteAppKeyRequest",
              "requestStreaming": false,
              "responseType": "DeleteAppKeyResponse",
              "responseLongType": "DeleteAppKeyResponse",
              "responseFullType": "tigrisdata.v1.DeleteAppKeyResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/projects/{project}/apps/keys/delete",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListAppKeys",
              "description": "Lists all app keys visible to requesting actor.",
              "requestType": "ListAppKeysRequest",
              "requestLongType": "ListAppKeysRequest",
              "requestFullType": "tigrisdata.v1.ListAppKeysRequest",
              "requestStreaming": false,
              "responseType": "ListAppKeysResponse",
              "responseLongType": "ListAppKeysResponse",
              "responseFullType": "tigrisdata.v1.ListAppKeysResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/projects/{project}/apps/keys"
                    }
                  ]
                }
              }
            },
            {
              "name": "RotateAppKeySecret",
              "description": "Endpoint is used to rotate the secret for the app key.",
              "requestType": "RotateAppKeyRequest",
              "requestLongType": "RotateAppKeyRequest",
              "requestFullType": "tigrisdata.v1.RotateAppKeyRequest",
              "requestStreaming": false,
              "responseType": "RotateAppKeyResponse",
              "responseLongType": "RotateAppKeyResponse",
              "responseFullType": "tigrisdata.v1.RotateAppKeyResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/projects/{project}/apps/keys/rotate",
                      "body": "*"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "server/v1/admin.proto",
      "description": "",
      "package": "tigrisdata.admin.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": false,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [],
      "services": [
        {
          "name": "Admin",
          "longName": "Admin",
          "fullName": "tigrisdata.admin.v1.Admin",
          "description": "",
          "methods": null
        }
      ]
    },
    {
      "name": "server/v1/health.proto",
      "description": "",
      "package": "",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "HealthCheckInput",
          "longName": "HealthCheckInput",
          "fullName": ".HealthCheckInput",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "HealthCheckResponse",
          "longName": "HealthCheckResponse",
          "fullName": ".HealthCheckResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "response",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "HealthAPI",
          "longName": "HealthAPI",
          "fullName": ".HealthAPI",
          "description": "",
          "methods": [
            {
              "name": "Health",
              "description": "This endpoint can be used to check the liveness of the server.",
              "requestType": "HealthCheckInput",
              "requestLongType": ".HealthCheckInput",
              "requestFullType": "HealthCheckInput",
              "requestStreaming": false,
              "responseType": "HealthCheckResponse",
              "responseLongType": ".HealthCheckResponse",
              "responseFullType": "HealthCheckResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/health"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "server/v1/auth.proto",
      "description": "",
      "package": "tigrisdata.auth.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "GrantType",
          "longName": "GrantType",
          "fullName": "tigrisdata.auth.v1.GrantType",
          "description": "",
          "values": [
            {
              "name": "REFRESH_TOKEN",
              "number": "0",
              "description": ""
            },
            {
              "name": "CLIENT_CREDENTIALS",
              "number": "1",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "CreateInvitationsRequest",
          "longName": "CreateInvitationsRequest",
          "fullName": "tigrisdata.auth.v1.CreateInvitationsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "invitations",
              "description": "",
              "label": "repeated",
              "type": "InvitationInfo",
              "longType": "InvitationInfo",
              "fullType": "tigrisdata.auth.v1.InvitationInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateInvitationsResponse",
          "longName": "CreateInvitationsResponse",
          "fullName": "tigrisdata.auth.v1.CreateInvitationsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "machine friendly status = created",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "human friendly message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "count",
              "description": "number of invitations created",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteInvitationsRequest",
          "longName": "DeleteInvitationsRequest",
          "fullName": "tigrisdata.auth.v1.DeleteInvitationsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "email",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteInvitationsResponse",
          "longName": "DeleteInvitationsResponse",
          "fullName": "tigrisdata.auth.v1.DeleteInvitationsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "machine friendly status = deleted",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "human friendly message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAccessTokenRequest",
          "longName": "GetAccessTokenRequest",
          "fullName": "tigrisdata.auth.v1.GetAccessTokenRequest",
          "description": "The Request message for the GetAccessToken. The grant type is a required\nfield and based on the grant type the other fields are used as mentioned\nbelow.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "grant_type",
              "description": "",
              "label": "",
              "type": "GrantType",
              "longType": "GrantType",
              "fullType": "tigrisdata.auth.v1.GrantType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "refresh_token",
              "description": "Refresh token is required when grant type is set as `REFRESH_TOKEN`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "client_id",
              "description": "Client Id is required when grant type is set as `CLIENT_CREDENTIALS`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "client_secret",
              "description": "Your Tigris API Key is required when grant type is set as\n`CLIENT_CREDENTIALS`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAccessTokenResponse",
          "longName": "GetAccessTokenResponse",
          "fullName": "tigrisdata.auth.v1.GetAccessTokenResponse",
          "description": "The response of GetAccessToken which contains access_token and optionally\nrefresh_token.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "access_token",
              "description": "An Access Token.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "refresh_token",
              "description": "The Refresh Token.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_in",
              "description": "Access token expiration timeout in seconds.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Invitation",
          "longName": "Invitation",
          "fullName": "tigrisdata.auth.v1.Invitation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "email",
              "description": "invited email address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "role",
              "description": "invited user's role",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "status of invitation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tigris_namespace",
              "description": "invited namespace",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tigris_namespace_name",
              "description": "invited namespace (display friendly)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_by",
              "description": "created by sub",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_by_name",
              "description": "created by name (display friendly)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiration_time",
              "description": "expiration time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InvitationInfo",
          "longName": "InvitationInfo",
          "fullName": "tigrisdata.auth.v1.InvitationInfo",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "email",
              "description": "Required: Email address to invite",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "role",
              "description": "Required: Role to associate this user to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "invitation_sent_by_name",
              "description": "Invitation sender name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListInvitationsRequest",
          "longName": "ListInvitationsRequest",
          "fullName": "tigrisdata.auth.v1.ListInvitationsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "optional status - an enum [PENDING, EXPIRED, ACCEPTED]",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListInvitationsResponse",
          "longName": "ListInvitationsResponse",
          "fullName": "tigrisdata.auth.v1.ListInvitationsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "invitations",
              "description": "",
              "label": "repeated",
              "type": "Invitation",
              "longType": "Invitation",
              "fullType": "tigrisdata.auth.v1.Invitation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListUsersRequest",
          "longName": "ListUsersRequest",
          "fullName": "tigrisdata.auth.v1.ListUsersRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListUsersResponse",
          "longName": "ListUsersResponse",
          "fullName": "tigrisdata.auth.v1.ListUsersResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "users",
              "description": "",
              "label": "repeated",
              "type": "User",
              "longType": "User",
              "fullType": "tigrisdata.auth.v1.User",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "User",
          "longName": "User",
          "fullName": "tigrisdata.auth.v1.User",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "email",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "picture",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "role",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VerifyInvitationRequest",
          "longName": "VerifyInvitationRequest",
          "fullName": "tigrisdata.auth.v1.VerifyInvitationRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "email",
              "description": "invited email address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "code",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dry",
              "description": "dry",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_dry",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VerifyInvitationResponse",
          "longName": "VerifyInvitationResponse",
          "fullName": "tigrisdata.auth.v1.VerifyInvitationResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tigris_namespace",
              "description": "if successful - which namespace this user belongs to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tigris_namespace_name",
              "description": "if successful - which namespace this user belongs to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "role",
              "description": "if successful - which role this user should be assigned to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Auth",
          "longName": "Auth",
          "fullName": "tigrisdata.auth.v1.Auth",
          "description": "",
          "methods": [
            {
              "name": "GetAccessToken",
              "description": "Endpoint for receiving access token from Tigris Server. The endpoint\nrequires Grant Type(`grant_type`) which has two possible values\n\u003ci\u003e\"REFRESH_TOKEN\"\u003c/i\u003e or \u003ci\u003e\"CLIENT_CREDENTIALS\"\u003c/i\u003e based on which either\nRefresh token(`refresh_token`) needs to be set or client\ncredentials(`client_id`, `client_secret`).",
              "requestType": "GetAccessTokenRequest",
              "requestLongType": "GetAccessTokenRequest",
              "requestFullType": "tigrisdata.auth.v1.GetAccessTokenRequest",
              "requestStreaming": false,
              "responseType": "GetAccessTokenResponse",
              "responseLongType": "GetAccessTokenResponse",
              "responseFullType": "tigrisdata.auth.v1.GetAccessTokenResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/auth/token",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateInvitations",
              "description": "Creates invitations to the namespace",
              "requestType": "CreateInvitationsRequest",
              "requestLongType": "CreateInvitationsRequest",
              "requestFullType": "tigrisdata.auth.v1.CreateInvitationsRequest",
              "requestStreaming": false,
              "responseType": "CreateInvitationsResponse",
              "responseLongType": "CreateInvitationsResponse",
              "responseFullType": "tigrisdata.auth.v1.CreateInvitationsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/auth/namespace/invitations/create",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeleteInvitations",
              "description": "Deletes invitations to the namespace",
              "requestType": "DeleteInvitationsRequest",
              "requestLongType": "DeleteInvitationsRequest",
              "requestFullType": "tigrisdata.auth.v1.DeleteInvitationsRequest",
              "requestStreaming": false,
              "responseType": "DeleteInvitationsResponse",
              "responseLongType": "DeleteInvitationsResponse",
              "responseFullType": "tigrisdata.auth.v1.DeleteInvitationsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/auth/namespace/invitations/delete",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListInvitations",
              "description": "Lists all the invitations to the namespace",
              "requestType": "ListInvitationsRequest",
              "requestLongType": "ListInvitationsRequest",
              "requestFullType": "tigrisdata.auth.v1.ListInvitationsRequest",
              "requestStreaming": false,
              "responseType": "ListInvitationsResponse",
              "responseLongType": "ListInvitationsResponse",
              "responseFullType": "tigrisdata.auth.v1.ListInvitationsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/auth/namespace/invitations/list"
                    }
                  ]
                }
              }
            },
            {
              "name": "VerifyInvitation",
              "description": "Verify invitation",
              "requestType": "VerifyInvitationRequest",
              "requestLongType": "VerifyInvitationRequest",
              "requestFullType": "tigrisdata.auth.v1.VerifyInvitationRequest",
              "requestStreaming": false,
              "responseType": "VerifyInvitationResponse",
              "responseLongType": "VerifyInvitationResponse",
              "responseFullType": "tigrisdata.auth.v1.VerifyInvitationResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/auth/namespace/invitations/verify",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListUsers",
              "description": "List users",
              "requestType": "ListUsersRequest",
              "requestLongType": "ListUsersRequest",
              "requestFullType": "tigrisdata.auth.v1.ListUsersRequest",
              "requestStreaming": false,
              "responseType": "ListUsersResponse",
              "responseLongType": "ListUsersResponse",
              "responseFullType": "tigrisdata.auth.v1.ListUsersResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/auth/namespace/users"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "server/v1/observability.proto",
      "description": "",
      "package": "tigrisdata.observability.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "Code",
          "longName": "Code",
          "fullName": "tigrisdata.observability.v1.Code",
          "description": "Codes returned by the Tigris server in the case of error",
          "values": [
            {
              "name": "OK",
              "number": "0",
              "description": "200"
            },
            {
              "name": "CANCELLED",
              "number": "1",
              "description": "499"
            },
            {
              "name": "UNKNOWN",
              "number": "2",
              "description": "500"
            },
            {
              "name": "INVALID_ARGUMENT",
              "number": "3",
              "description": "400"
            },
            {
              "name": "DEADLINE_EXCEEDED",
              "number": "4",
              "description": "504"
            },
            {
              "name": "NOT_FOUND",
              "number": "5",
              "description": "404"
            },
            {
              "name": "ALREADY_EXISTS",
              "number": "6",
              "description": "409"
            },
            {
              "name": "PERMISSION_DENIED",
              "number": "7",
              "description": "403"
            },
            {
              "name": "RESOURCE_EXHAUSTED",
              "number": "8",
              "description": "429"
            },
            {
              "name": "FAILED_PRECONDITION",
              "number": "9",
              "description": "412"
            },
            {
              "name": "ABORTED",
              "number": "10",
              "description": "409"
            },
            {
              "name": "OUT_OF_RANGE",
              "number": "11",
              "description": "400"
            },
            {
              "name": "UNIMPLEMENTED",
              "number": "12",
              "description": "501"
            },
            {
              "name": "INTERNAL",
              "number": "13",
              "description": "500"
            },
            {
              "name": "UNAVAILABLE",
              "number": "14",
              "description": "503"
            },
            {
              "name": "DATA_LOSS",
              "number": "15",
              "description": "500"
            },
            {
              "name": "UNAUTHENTICATED",
              "number": "16",
              "description": "401"
            },
            {
              "name": "CONFLICT",
              "number": "17",
              "description": "409"
            },
            {
              "name": "BAD_GATEWAY",
              "number": "18",
              "description": "502"
            },
            {
              "name": "METHOD_NOT_ALLOWED",
              "number": "19",
              "description": "405"
            },
            {
              "name": "CONTENT_TOO_LARGE",
              "number": "20",
              "description": "413"
            }
          ]
        },
        {
          "name": "MetricQueryFunction",
          "longName": "MetricQueryFunction",
          "fullName": "tigrisdata.observability.v1.MetricQueryFunction",
          "description": "Function to apply on metrics query",
          "values": [
            {
              "name": "RATE",
              "number": "0",
              "description": ""
            },
            {
              "name": "COUNT",
              "number": "1",
              "description": ""
            },
            {
              "name": "NONE",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "MetricQuerySpaceAggregation",
          "longName": "MetricQuerySpaceAggregation",
          "fullName": "tigrisdata.observability.v1.MetricQuerySpaceAggregation",
          "description": "Specifies how the metric should be aggregated for the time slices.",
          "values": [
            {
              "name": "AVG",
              "number": "0",
              "description": ""
            },
            {
              "name": "MIN",
              "number": "1",
              "description": ""
            },
            {
              "name": "MAX",
              "number": "2",
              "description": ""
            },
            {
              "name": "SUM",
              "number": "3",
              "description": ""
            }
          ]
        },
        {
          "name": "RollupAggregator",
          "longName": "RollupAggregator",
          "fullName": "tigrisdata.observability.v1.RollupAggregator",
          "description": "Specifies how the initial query's result buckets should be processed in\nnext stage.",
          "values": [
            {
              "name": "ROLLUP_AGGREGATOR_SUM",
              "number": "0",
              "description": ""
            },
            {
              "name": "ROLLUP_AGGREGATOR_COUNT",
              "number": "1",
              "description": ""
            },
            {
              "name": "ROLLUP_AGGREGATOR_MIN",
              "number": "2",
              "description": ""
            },
            {
              "name": "ROLLUP_AGGREGATOR_MAX",
              "number": "3",
              "description": ""
            },
            {
              "name": "ROLLUP_AGGREGATOR_AVG",
              "number": "4",
              "description": ""
            }
          ]
        },
        {
          "name": "TigrisOperation",
          "longName": "TigrisOperation",
          "fullName": "tigrisdata.observability.v1.TigrisOperation",
          "description": "Represents Tigris operation category",
          "values": [
            {
              "name": "ALL",
              "number": "0",
              "description": ""
            },
            {
              "name": "READ",
              "number": "1",
              "description": ""
            },
            {
              "name": "WRITE",
              "number": "2",
              "description": ""
            },
            {
              "name": "METADATA",
              "number": "3",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AdditionalFunction",
          "longName": "AdditionalFunction",
          "fullName": "tigrisdata.observability.v1.AdditionalFunction",
          "description": "Additional function to apply on metrics query",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "rollup",
              "description": "",
              "label": "optional",
              "type": "RollupFunction",
              "longType": "RollupFunction",
              "fullType": "tigrisdata.observability.v1.RollupFunction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_rollup",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataPoint",
          "longName": "DataPoint",
          "fullName": "tigrisdata.observability.v1.DataPoint",
          "description": "Represents the data point in timeseries.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Error",
          "longName": "Error",
          "fullName": "tigrisdata.observability.v1.Error",
          "description": "The Error type defines a logical error model",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "The status code is a short, machine parsable string,\nwhich uniquely identifies the error type.\nTigris to HTTP code mapping [here](/reference/http-code)",
              "label": "",
              "type": "Code",
              "longType": "Code",
              "fullType": "tigrisdata.observability.v1.Code",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "A developer-facing descriptive error message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ErrorDetails",
          "longName": "ErrorDetails",
          "fullName": "tigrisdata.observability.v1.ErrorDetails",
          "description": "ErrorDetails defines error format passed by Tigris HTTP protocol",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "retry",
              "description": "",
              "label": "",
              "type": "RetryInfo",
              "longType": "RetryInfo",
              "fullType": "tigrisdata.observability.v1.RetryInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetInfoRequest",
          "longName": "GetInfoRequest",
          "fullName": "tigrisdata.observability.v1.GetInfoRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetInfoResponse",
          "longName": "GetInfoResponse",
          "fullName": "tigrisdata.observability.v1.GetInfoResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "server_version",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "NOTE: This is a hack to propagate this object definition to OpenAPI",
              "label": "",
              "type": "Error",
              "longType": "Error",
              "fullType": "tigrisdata.observability.v1.Error",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MetricSeries",
          "longName": "MetricSeries",
          "fullName": "tigrisdata.observability.v1.MetricSeries",
          "description": "Represents series in timeseries based on input query.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metric",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scope",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dataPoints",
              "description": "",
              "label": "repeated",
              "type": "DataPoint",
              "longType": "DataPoint",
              "fullType": "tigrisdata.observability.v1.DataPoint",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTimeSeriesMetricsRequest",
          "longName": "QueryTimeSeriesMetricsRequest",
          "fullName": "tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest",
          "description": "Requests the time series metrics",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "branch",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metric_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tigris_operation",
              "description": "",
              "label": "",
              "type": "TigrisOperation",
              "longType": "TigrisOperation",
              "fullType": "tigrisdata.observability.v1.TigrisOperation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "space_aggregation",
              "description": "",
              "label": "",
              "type": "MetricQuerySpaceAggregation",
              "longType": "MetricQuerySpaceAggregation",
              "fullType": "tigrisdata.observability.v1.MetricQuerySpaceAggregation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "space_aggregated_by",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "function",
              "description": "",
              "label": "",
              "type": "MetricQueryFunction",
              "longType": "MetricQueryFunction",
              "fullType": "tigrisdata.observability.v1.MetricQueryFunction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantile",
              "description": "",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "additionalFunctions",
              "description": "",
              "label": "repeated",
              "type": "AdditionalFunction",
              "longType": "AdditionalFunction",
              "fullType": "tigrisdata.observability.v1.AdditionalFunction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTimeSeriesMetricsResponse",
          "longName": "QueryTimeSeriesMetricsResponse",
          "fullName": "tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse",
          "description": "QueryTimeSeriesMetric responds with this type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "query",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "series",
              "description": "",
              "label": "repeated",
              "type": "MetricSeries",
              "longType": "MetricSeries",
              "fullType": "tigrisdata.observability.v1.MetricSeries",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QuotaLimitsRequest",
          "longName": "QuotaLimitsRequest",
          "fullName": "tigrisdata.observability.v1.QuotaLimitsRequest",
          "description": "Request current namespace quota limits",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QuotaLimitsResponse",
          "longName": "QuotaLimitsResponse",
          "fullName": "tigrisdata.observability.v1.QuotaLimitsResponse",
          "description": "Contains current quota limits",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ReadUnits",
              "description": "Number of allowed read units per second",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "WriteUnits",
              "description": "Number of allowed write units per second",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "StorageSize",
              "description": "Maximum number of bytes allowed to store",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QuotaUsageRequest",
          "longName": "QuotaUsageRequest",
          "fullName": "tigrisdata.observability.v1.QuotaUsageRequest",
          "description": "Request current namespace quota usage",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QuotaUsageResponse",
          "longName": "QuotaUsageResponse",
          "fullName": "tigrisdata.observability.v1.QuotaUsageResponse",
          "description": "Contains current quota usage",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ReadUnits",
              "description": "Number of read units used per second",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "WriteUnits",
              "description": "Number of write units used per second",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "StorageSize",
              "description": "Number of bytes stored",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ReadUnitsThrottled",
              "description": "Number of read units throttled per second.\nUnits which was rejected with \"resource exhausted error\".",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "WriteUnitsThrottled",
              "description": "Number of write units throttled per second.\nUnits which was rejected with \"resource exhausted error\".",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "StorageSizeThrottled",
              "description": "Number of bytes throttled.\nNumber of bytes which were attempted to write in excess of quota and were rejected.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RetryInfo",
          "longName": "RetryInfo",
          "fullName": "tigrisdata.observability.v1.RetryInfo",
          "description": "Contains retry information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delay",
              "description": "retry delay advice in milliseconds",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RollupFunction",
          "longName": "RollupFunction",
          "fullName": "tigrisdata.observability.v1.RollupFunction",
          "description": "Rollup function aggregates the slices of metrics returned by original query\nand lets you operate on the slices using aggregator and constructs the\nbigger slice of your choice of interval (specified in seconds).",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "aggregator",
              "description": "",
              "label": "",
              "type": "RollupAggregator",
              "longType": "RollupAggregator",
              "fullType": "tigrisdata.observability.v1.RollupAggregator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interval",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WhoAmIRequest",
          "longName": "WhoAmIRequest",
          "fullName": "tigrisdata.observability.v1.WhoAmIRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "WhoAmIResponse",
          "longName": "WhoAmIResponse",
          "fullName": "tigrisdata.observability.v1.WhoAmIResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "sub",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "namespace",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "role",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auth_method",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Observability",
          "longName": "Observability",
          "fullName": "tigrisdata.observability.v1.Observability",
          "description": "",
          "methods": [
            {
              "name": "QueryTimeSeriesMetrics",
              "description": "Queries time series metrics",
              "requestType": "QueryTimeSeriesMetricsRequest",
              "requestLongType": "QueryTimeSeriesMetricsRequest",
              "requestFullType": "tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest",
              "requestStreaming": false,
              "responseType": "QueryTimeSeriesMetricsResponse",
              "responseLongType": "QueryTimeSeriesMetricsResponse",
              "responseFullType": "tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/observability/metrics/timeseries/query",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "QuotaLimits",
              "description": "Returns current namespace quota limits",
              "requestType": "QuotaLimitsRequest",
              "requestLongType": "QuotaLimitsRequest",
              "requestFullType": "tigrisdata.observability.v1.QuotaLimitsRequest",
              "requestStreaming": false,
              "responseType": "QuotaLimitsResponse",
              "responseLongType": "QuotaLimitsResponse",
              "responseFullType": "tigrisdata.observability.v1.QuotaLimitsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/observability/quota/limits",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "QuotaUsage",
              "description": "Returns current namespace quota limits",
              "requestType": "QuotaUsageRequest",
              "requestLongType": "QuotaUsageRequest",
              "requestFullType": "tigrisdata.observability.v1.QuotaUsageRequest",
              "requestStreaming": false,
              "responseType": "QuotaUsageResponse",
              "responseLongType": "QuotaUsageResponse",
              "responseFullType": "tigrisdata.observability.v1.QuotaUsageResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/observability/quota/usage",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetInfo",
              "description": "Provides the information about the server. This information includes returning the server version, etc.",
              "requestType": "GetInfoRequest",
              "requestLongType": "GetInfoRequest",
              "requestFullType": "tigrisdata.observability.v1.GetInfoRequest",
              "requestStreaming": false,
              "responseType": "GetInfoResponse",
              "responseLongType": "GetInfoResponse",
              "responseFullType": "tigrisdata.observability.v1.GetInfoResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/observability/info"
                    }
                  ]
                }
              }
            },
            {
              "name": "WhoAmI",
              "description": "",
              "requestType": "WhoAmIRequest",
              "requestLongType": "WhoAmIRequest",
              "requestFullType": "tigrisdata.observability.v1.WhoAmIRequest",
              "requestStreaming": false,
              "responseType": "WhoAmIResponse",
              "responseLongType": "WhoAmIResponse",
              "responseFullType": "tigrisdata.observability.v1.WhoAmIResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/observability/whoami"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "server/v1/billing.proto",
      "description": "",
      "package": "tigrisdata.billing.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "AggregationWindow",
          "longName": "AggregationWindow",
          "fullName": "tigrisdata.billing.v1.AggregationWindow",
          "description": "",
          "values": [
            {
              "name": "HOUR",
              "number": "0",
              "description": ""
            },
            {
              "name": "DAY",
              "number": "1",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Charge",
          "longName": "Charge",
          "fullName": "tigrisdata.billing.v1.Charge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Charge name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantity",
              "description": "",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subtotal",
              "description": "",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tiers",
              "description": "Tiered charges, if any",
              "label": "repeated",
              "type": "ChargeTier",
              "longType": "ChargeTier",
              "fullType": "tigrisdata.billing.v1.ChargeTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ChargeTier",
          "longName": "ChargeTier",
          "fullName": "tigrisdata.billing.v1.ChargeTier",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "starting_at",
              "description": "Starting point where this Tier is applicable.\nEx - A charge could be tiered as \"Tier 1 (0-5)\", \"Tier 2 (5-10)\"; starting_at will be 0, 5 etc.",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantity",
              "description": "",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subtotal",
              "description": "",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetUsageRequest",
          "longName": "GetUsageRequest",
          "fullName": "tigrisdata.billing.v1.GetUsageRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "start_time",
              "description": "RFC 3339 starting time to get usage from",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "RFC 3339 ending time to get usage until",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metrics",
              "description": "Optionally filter usage data by specific metrics. By default, all metrics are included in usage data",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "aggregate_by",
              "description": "Optionally aggregate data over a time window. By default, data will be aggregated \"hourly\"",
              "label": "optional",
              "type": "AggregationWindow",
              "longType": "AggregationWindow",
              "fullType": "tigrisdata.billing.v1.AggregationWindow",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_aggregate_by",
              "defaultValue": ""
            },
            {
              "name": "next_page",
              "description": "Optional pagination token for fetching a particular result page, first page will be fetched if `null`",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_page",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetUsageResponse",
          "longName": "GetUsageResponse",
          "fullName": "tigrisdata.billing.v1.GetUsageResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Series of usage data grouped by usage metric.",
              "label": "repeated",
              "type": "DataEntry",
              "longType": "GetUsageResponse.DataEntry",
              "fullType": "tigrisdata.billing.v1.GetUsageResponse.DataEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_page",
              "description": "token for next page if it exists, else `null`",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_page",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataEntry",
          "longName": "GetUsageResponse.DataEntry",
          "fullName": "tigrisdata.billing.v1.GetUsageResponse.DataEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "UsageTimeSeries",
              "longType": "UsageTimeSeries",
              "fullType": "tigrisdata.billing.v1.UsageTimeSeries",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Invoice",
          "longName": "Invoice",
          "fullName": "tigrisdata.billing.v1.Invoice",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "unique identifier for this invoice",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entries",
              "description": "entries that make up the invoice",
              "label": "repeated",
              "type": "InvoiceLineItem",
              "longType": "InvoiceLineItem",
              "fullType": "tigrisdata.billing.v1.InvoiceLineItem",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "RFC 3339 starting time for usage period during which items were added to this invoice",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "RFC 3339 ending time for usage period during which items were added to this invoice",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subtotal",
              "description": "invoice subtotal",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total",
              "description": "total invoice amount",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "plan_name",
              "description": "Tigris price plan name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InvoiceLineItem",
          "longName": "InvoiceLineItem",
          "fullName": "tigrisdata.billing.v1.InvoiceLineItem",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Product name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantity",
              "description": "Quantity",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total",
              "description": "Total amount for the product",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "charges",
              "description": "Broken down charges",
              "label": "repeated",
              "type": "Charge",
              "longType": "Charge",
              "fullType": "tigrisdata.billing.v1.Charge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListInvoicesRequest",
          "longName": "ListInvoicesRequest",
          "fullName": "tigrisdata.billing.v1.ListInvoicesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "starting_on",
              "description": "RFC 3339 timestamp (inclusive). Invoices will only be returned for billing periods that start at or after this time.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_starting_on",
              "defaultValue": ""
            },
            {
              "name": "ending_before",
              "description": "RFC 3339 timestamp (exclusive). Invoices will only be returned for billing periods that end before this time.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_ending_before",
              "defaultValue": ""
            },
            {
              "name": "invoice_id",
              "description": "optionally filter by a specific invoice_id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_size",
              "description": "maximum number of items to include in result set",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page_size",
              "defaultValue": ""
            },
            {
              "name": "next_page",
              "description": "pagination token for fetching a particular result page, first page will be fetched if `null`",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_page",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListInvoicesResponse",
          "longName": "ListInvoicesResponse",
          "fullName": "tigrisdata.billing.v1.ListInvoicesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Array of invoices",
              "label": "repeated",
              "type": "Invoice",
              "longType": "Invoice",
              "fullType": "tigrisdata.billing.v1.Invoice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_page",
              "description": "token for next page if it exists, else `null`",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_page",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Usage",
          "longName": "Usage",
          "fullName": "tigrisdata.billing.v1.Usage",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start_time",
              "description": "RFC 3339 starting time for this usage period",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "RFC 3339 ending time for this usage period",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Usage metric value",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UsageTimeSeries",
          "longName": "UsageTimeSeries",
          "fullName": "tigrisdata.billing.v1.UsageTimeSeries",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "series",
              "description": "Array of usage metric",
              "label": "repeated",
              "type": "Usage",
              "longType": "Usage",
              "fullType": "tigrisdata.billing.v1.Usage",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Billing",
          "longName": "Billing",
          "fullName": "tigrisdata.billing.v1.Billing",
          "description": "",
          "methods": [
            {
              "name": "ListInvoices",
              "description": "ListInvoices fetches past invoices for this user",
              "requestType": "ListInvoicesRequest",
              "requestLongType": "ListInvoicesRequest",
              "requestFullType": "tigrisdata.billing.v1.ListInvoicesRequest",
              "requestStreaming": false,
              "responseType": "ListInvoicesResponse",
              "responseLongType": "ListInvoicesResponse",
              "responseFullType": "tigrisdata.billing.v1.ListInvoicesResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/billing/invoices",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetUsage",
              "description": "GetUsage gets the aggregate usage for this user in given time period",
              "requestType": "GetUsageRequest",
              "requestLongType": "GetUsageRequest",
              "requestFullType": "tigrisdata.billing.v1.GetUsageRequest",
              "requestStreaming": false,
              "responseType": "GetUsageResponse",
              "responseLongType": "GetUsageResponse",
              "responseFullType": "tigrisdata.billing.v1.GetUsageResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/billing/usage",
                      "body": "*"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}
