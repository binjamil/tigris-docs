{
  "files": [
    {
      "name": "server/v1/api.proto",
      "description": "",
      "package": "tigrisdata.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "BeginTransactionRequest",
          "longName": "BeginTransactionRequest",
          "fullName": "tigrisdata.v1.BeginTransactionRequest",
          "description": "Start new transaction in database specified by \"db\".",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name this transaction belongs to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "The transaction options.",
              "label": "",
              "type": "TransactionOptions",
              "longType": "TransactionOptions",
              "fullType": "tigrisdata.v1.TransactionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BeginTransactionResponse",
          "longName": "BeginTransactionResponse",
          "fullName": "tigrisdata.v1.BeginTransactionResponse",
          "description": "Start transaction returns transaction context\n which uniquely identifies the transaction",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx_ctx",
              "description": "Returns a tigris transactional context with details about the transactions.",
              "label": "",
              "type": "TransactionCtx",
              "longType": "TransactionCtx",
              "fullType": "tigrisdata.v1.TransactionCtx",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Collation",
          "longName": "Collation",
          "fullName": "tigrisdata.v1.Collation",
          "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "case",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollectionDescription",
          "longName": "CollectionDescription",
          "fullName": "tigrisdata.v1.CollectionDescription",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "Name of the collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the collection.",
              "label": "",
              "type": "CollectionMetadata",
              "longType": "CollectionMetadata",
              "fullType": "tigrisdata.v1.CollectionMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema",
              "description": "Collections schema",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Collection size in bytes",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollectionInfo",
          "longName": "CollectionInfo",
          "fullName": "tigrisdata.v1.CollectionInfo",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "Collection name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the collection.",
              "label": "",
              "type": "CollectionMetadata",
              "longType": "CollectionMetadata",
              "fullType": "tigrisdata.v1.CollectionMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollectionMetadata",
          "longName": "CollectionMetadata",
          "fullName": "tigrisdata.v1.CollectionMetadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "CollectionOptions",
          "longName": "CollectionOptions",
          "fullName": "tigrisdata.v1.CollectionOptions",
          "description": "Collection requests modifying options.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "CommitTransactionRequest",
          "longName": "CommitTransactionRequest",
          "fullName": "tigrisdata.v1.CommitTransactionRequest",
          "description": "Commit transaction with the given ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name this transaction belongs to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CommitTransactionResponse",
          "longName": "CommitTransactionResponse",
          "fullName": "tigrisdata.v1.CommitTransactionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "Status of commit transaction operation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateDatabaseRequest",
          "longName": "CreateDatabaseRequest",
          "fullName": "tigrisdata.v1.CreateDatabaseRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Create database with this name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "DatabaseOptions",
              "longType": "DatabaseOptions",
              "fullType": "tigrisdata.v1.DatabaseOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateDatabaseResponse",
          "longName": "CreateDatabaseResponse",
          "fullName": "tigrisdata.v1.CreateDatabaseResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"created\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateOrUpdateCollectionRequest",
          "longName": "CreateOrUpdateCollectionRequest",
          "fullName": "tigrisdata.v1.CreateOrUpdateCollectionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name where to create collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name to create.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema",
              "description": "The schema specifications are same as\nJSON schema specification defined \u003ca href=\"https://json-schema.org/specification.html\" title=\"here\"\u003ehere\u003c/a\u003e.\nThe schema of the `documents` collection differs from the schema of `messages` collection as `messages` collection does not\nhave any concept of `primary_key`. The server recognizes type of the collection by the `collection_type` set in\nthe schema.\n\u003cp\u003e\u003c/p\u003e\nSchema example of `documents`:\n`{\n \"title\": \"user\",\n \"description\": \"Collection of documents with details of users\",\n \"properties\": {\n   \"id\": {\n     \"description\": \"A unique identifier for the user\",\n     \"type\": \"integer\"\n   },\n   \"name\": {\n     \"description\": \"Name of the user\",\n     \"type\": \"string\",\n     \"maxLength\": 100\n   },\n   \"balance\": {\n     \"description\": \"User account balance\",\n     \"type\": \"number\"\n   }\n },\n \"primary_key\": [\"id\"]\n}`\n\u003cp\u003e\u003c/p\u003e*Note: The `collection_type` is not set as default is documents.*\n\u003cp\u003e\u003c/p\u003eSchema example of `messages`:\n`{\n \"title\": \"user_events\",\n \"description\": \"Topic for user events\",\n \"properties\": {\n   \"event_id\": {\n     \"description\": \"A id for the event\",\n     \"type\": \"integer\"\n   },\n   \"event_type\": {\n     \"description\": \"Type of the Event\",\n     \"type\": \"string\",\n     \"maxLength\": 100\n   }\n   \"event_details\": {\n     \"description\": \"Details about the Event\",\n     \"type\": \"string\"\n   }\n },\n \"collection_type\": \"messages\"\n}`\n\u003cp\u003e\u003c/p\u003e *Note: The `collection_type` is set as \"messages\".*",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "only_create",
              "description": "If set to `true` then the update schema request to the collection will fail by returning a conflict with HTTP Status\ncode 409. The default is false.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "CollectionOptions",
              "longType": "CollectionOptions",
              "fullType": "tigrisdata.v1.CollectionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateOrUpdateCollectionResponse",
          "longName": "CreateOrUpdateCollectionResponse",
          "fullName": "tigrisdata.v1.CreateOrUpdateCollectionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"created\" or \"updated\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DatabaseDescription",
          "longName": "DatabaseDescription",
          "fullName": "tigrisdata.v1.DatabaseDescription",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "DatabaseInfo",
          "longName": "DatabaseInfo",
          "fullName": "tigrisdata.v1.DatabaseInfo",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the database.",
              "label": "",
              "type": "DatabaseMetadata",
              "longType": "DatabaseMetadata",
              "fullType": "tigrisdata.v1.DatabaseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DatabaseMetadata",
          "longName": "DatabaseMetadata",
          "fullName": "tigrisdata.v1.DatabaseMetadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "DatabaseOptions",
          "longName": "DatabaseOptions",
          "fullName": "tigrisdata.v1.DatabaseOptions",
          "description": "Database requests modifying options.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "DeleteRequest",
          "longName": "DeleteRequest",
          "fullName": "tigrisdata.v1.DeleteRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name where to insert documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name where to insert documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Delete documents which matching specified filter.\nA filter can simply be key, value where key\nis the field name and value would be the value for this field. Or a filter can be logical where\ntwo or more fields can be logically joined using $or and $and. A few examples of filter:\n\u003cli\u003e To delete a user document where the id has a value 1: ```{\"id\": 1 }```\n\u003cli\u003e To delete all the user documents where the key \"id\" has a value 1 or 2 or 3: `{\"$or\": [{\"id\": 1}, {\"id\": 2}, {\"id\": 3}]}`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "DeleteRequestOptions",
              "longType": "DeleteRequestOptions",
              "fullType": "tigrisdata.v1.DeleteRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteRequestOptions",
          "longName": "DeleteRequestOptions",
          "fullName": "tigrisdata.v1.DeleteRequestOptions",
          "description": "Additional options for deleted requests.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "write_options",
              "description": "",
              "label": "",
              "type": "WriteOptions",
              "longType": "WriteOptions",
              "fullType": "tigrisdata.v1.WriteOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collation",
              "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
              "label": "",
              "type": "Collation",
              "longType": "Collation",
              "fullType": "tigrisdata.v1.Collation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteResponse",
          "longName": "DeleteResponse",
          "fullName": "tigrisdata.v1.DeleteResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "an enum with value set as \"deleted\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DescribeCollectionRequest",
          "longName": "DescribeCollectionRequest",
          "fullName": "tigrisdata.v1.DescribeCollectionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Name of the database.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Name of the collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "Collection options.",
              "label": "",
              "type": "CollectionOptions",
              "longType": "CollectionOptions",
              "fullType": "tigrisdata.v1.CollectionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DescribeCollectionResponse",
          "longName": "DescribeCollectionResponse",
          "fullName": "tigrisdata.v1.DescribeCollectionResponse",
          "description": "A detailed description of the collection.\nThe description returns collection metadata and the schema.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "Name of the collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the collection.",
              "label": "",
              "type": "CollectionMetadata",
              "longType": "CollectionMetadata",
              "fullType": "tigrisdata.v1.CollectionMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema",
              "description": "Schema of this collection.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "The size of this collection in bytes.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DescribeDatabaseRequest",
          "longName": "DescribeDatabaseRequest",
          "fullName": "tigrisdata.v1.DescribeDatabaseRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Name of the database.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DescribeDatabaseResponse",
          "longName": "DescribeDatabaseResponse",
          "fullName": "tigrisdata.v1.DescribeDatabaseResponse",
          "description": "A detailed description of the database and all the associated collections.\nDescription of the collection includes schema details as well.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Name of the database.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata about the database.",
              "label": "",
              "type": "DatabaseMetadata",
              "longType": "DatabaseMetadata",
              "fullType": "tigrisdata.v1.DatabaseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collections",
              "description": "A detailed description about all the collections.\nThe description returns collection metadata and the schema.",
              "label": "repeated",
              "type": "CollectionDescription",
              "longType": "CollectionDescription",
              "fullType": "tigrisdata.v1.CollectionDescription",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Sum of all the collections sizes present in this database",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DropCollectionRequest",
          "longName": "DropCollectionRequest",
          "fullName": "tigrisdata.v1.DropCollectionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name of the collection.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name to drop.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "CollectionOptions",
              "longType": "CollectionOptions",
              "fullType": "tigrisdata.v1.CollectionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DropCollectionResponse",
          "longName": "DropCollectionResponse",
          "fullName": "tigrisdata.v1.DropCollectionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"dropped\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DropDatabaseRequest",
          "longName": "DropDatabaseRequest",
          "fullName": "tigrisdata.v1.DropDatabaseRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Drop database with this name. **Note**: Deletes all the collections in the database.\nUse with caution.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "DatabaseOptions",
              "longType": "DatabaseOptions",
              "fullType": "tigrisdata.v1.DatabaseOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DropDatabaseResponse",
          "longName": "DropDatabaseResponse",
          "fullName": "tigrisdata.v1.DropDatabaseResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "A detailed response message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"dropped\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EventsRequest",
          "longName": "EventsRequest",
          "fullName": "tigrisdata.v1.EventsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "EventsRequestOptions",
              "longType": "EventsRequestOptions",
              "fullType": "tigrisdata.v1.EventsRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EventsRequestOptions",
          "longName": "EventsRequestOptions",
          "fullName": "tigrisdata.v1.EventsRequestOptions",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "EventsResponse",
          "longName": "EventsResponse",
          "fullName": "tigrisdata.v1.EventsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "event",
              "description": "",
              "label": "",
              "type": "StreamEvent",
              "longType": "StreamEvent",
              "fullType": "tigrisdata.v1.StreamEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FacetCount",
          "longName": "FacetCount",
          "fullName": "tigrisdata.v1.FacetCount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "count",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FacetStats",
          "longName": "FacetStats",
          "fullName": "tigrisdata.v1.FacetStats",
          "description": "Additional stats for faceted field",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "avg",
              "description": "Average of all values in a field. Only available for numeric fields",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_avg",
              "defaultValue": ""
            },
            {
              "name": "max",
              "description": "Maximum of all values in a field. Only available for numeric fields",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max",
              "defaultValue": ""
            },
            {
              "name": "min",
              "description": "Minimum of all values in a field. Only available for numeric fields",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_min",
              "defaultValue": ""
            },
            {
              "name": "sum",
              "description": "Sum of all values in a field. Only available for numeric fields",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sum",
              "defaultValue": ""
            },
            {
              "name": "count",
              "description": "Total number of values in a field",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InsertRequest",
          "longName": "InsertRequest",
          "fullName": "tigrisdata.v1.InsertRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name where to insert documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name where to insert documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "documents",
              "description": "Array of documents to insert. Each document is a JSON object.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "InsertRequestOptions",
              "longType": "InsertRequestOptions",
              "fullType": "tigrisdata.v1.InsertRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InsertRequestOptions",
          "longName": "InsertRequestOptions",
          "fullName": "tigrisdata.v1.InsertRequestOptions",
          "description": "additional options for insert requests.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "write_options",
              "description": "",
              "label": "",
              "type": "WriteOptions",
              "longType": "WriteOptions",
              "fullType": "tigrisdata.v1.WriteOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InsertResponse",
          "longName": "InsertResponse",
          "fullName": "tigrisdata.v1.InsertResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "An enum with value set as \"inserted\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "keys",
              "description": "an array returns the value of the primary keys.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCollectionsRequest",
          "longName": "ListCollectionsRequest",
          "fullName": "tigrisdata.v1.ListCollectionsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "List collection in this database.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "CollectionOptions",
              "longType": "CollectionOptions",
              "fullType": "tigrisdata.v1.CollectionOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCollectionsResponse",
          "longName": "ListCollectionsResponse",
          "fullName": "tigrisdata.v1.ListCollectionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Name of the database.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collections",
              "description": "List of the collections info in the database.",
              "label": "repeated",
              "type": "CollectionInfo",
              "longType": "CollectionInfo",
              "fullType": "tigrisdata.v1.CollectionInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDatabasesRequest",
          "longName": "ListDatabasesRequest",
          "fullName": "tigrisdata.v1.ListDatabasesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListDatabasesResponse",
          "longName": "ListDatabasesResponse",
          "fullName": "tigrisdata.v1.ListDatabasesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "databases",
              "description": "List of the databases.",
              "label": "repeated",
              "type": "DatabaseInfo",
              "longType": "DatabaseInfo",
              "fullType": "tigrisdata.v1.DatabaseInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Page",
          "longName": "Page",
          "fullName": "tigrisdata.v1.Page",
          "description": "Pagination metadata for SearchResponse",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current",
              "description": "Number representing the current page of results",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Maximum number of results per page",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PublishRequest",
          "longName": "PublishRequest",
          "fullName": "tigrisdata.v1.PublishRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name where to publish messages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Topic name where to publish messages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "messages",
              "description": "An array of JSON messages to publish.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "PublishRequestOptions",
              "longType": "PublishRequestOptions",
              "fullType": "tigrisdata.v1.PublishRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PublishRequestOptions",
          "longName": "PublishRequestOptions",
          "fullName": "tigrisdata.v1.PublishRequestOptions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "partition",
              "description": "",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_partition",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PublishResponse",
          "longName": "PublishResponse",
          "fullName": "tigrisdata.v1.PublishResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "keys",
              "description": "",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReadRequest",
          "longName": "ReadRequest",
          "fullName": "tigrisdata.v1.ReadRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name to read documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name to read documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Returns documents matching this filter. A filter can simply be a key, value pair where a key is the field name and the value would be the value for this field.\nTigris also allows complex filtering by passing logical expressions. Logical filters are applied on two or more fields using `$or` and `$and`.\nA few examples of filters:\n\u003cli\u003e To read a user document where the id has a value 1: ```{\"id\": 1 }```\n\u003cli\u003e To read all the user documents where the key \"id\" has a value 1 or 2 or 3: `{\"$or\": [{\"id\": 1}, {\"id\": 2}, {\"id\": 3}]}`\nFilter allows setting collation on an individual field level. To set collation for all the fields see options.\nThe detailed documentation of the filter is \u003ca href=\"https://docs.tigrisdata.com/overview/query#specification-1\" title=\"here\"\u003ehere\u003c/a\u003e.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "To read specific fields from a document. Default is all.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "Options that can be used to modify the results, for example `limit` to control the number of documents\nreturned by the server.",
              "label": "",
              "type": "ReadRequestOptions",
              "longType": "ReadRequestOptions",
              "fullType": "tigrisdata.v1.ReadRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReadRequestOptions",
          "longName": "ReadRequestOptions",
          "fullName": "tigrisdata.v1.ReadRequestOptions",
          "description": "Options that can be used to modify the results, for example \"limit\" to control the number of documents\nreturned by the server.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "limit",
              "description": "Limit the number of documents returned by the read operation.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "skip",
              "description": "Number of documents to skip before starting to return resulting documents.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offset",
              "description": "A cursor for use in pagination. The next streams will return documents after this offset.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collation",
              "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
              "label": "",
              "type": "Collation",
              "longType": "Collation",
              "fullType": "tigrisdata.v1.Collation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReadResponse",
          "longName": "ReadResponse",
          "fullName": "tigrisdata.v1.ReadResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Object containing the collection document.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "resume_token",
              "description": "An internal key, used for pagination.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReplaceRequest",
          "longName": "ReplaceRequest",
          "fullName": "tigrisdata.v1.ReplaceRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name where to replace documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name where to replace documents.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "documents",
              "description": "Array of documents to be replaced. Each document is a JSON object.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "ReplaceRequestOptions",
              "longType": "ReplaceRequestOptions",
              "fullType": "tigrisdata.v1.ReplaceRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReplaceRequestOptions",
          "longName": "ReplaceRequestOptions",
          "fullName": "tigrisdata.v1.ReplaceRequestOptions",
          "description": "Additional options for replace requests.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "write_options",
              "description": "",
              "label": "",
              "type": "WriteOptions",
              "longType": "WriteOptions",
              "fullType": "tigrisdata.v1.WriteOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReplaceResponse",
          "longName": "ReplaceResponse",
          "fullName": "tigrisdata.v1.ReplaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "an enum with value set as \"replaced\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "keys",
              "description": "an array returns the value of the primary keys.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResponseMetadata",
          "longName": "ResponseMetadata",
          "fullName": "tigrisdata.v1.ResponseMetadata",
          "description": "Has metadata related to the documents stored.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "created_at",
              "description": "Time at which the document was inserted/replaced. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Time at which the document was updated. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deleted_at",
              "description": "Time at which the document was deleted. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RollbackTransactionRequest",
          "longName": "RollbackTransactionRequest",
          "fullName": "tigrisdata.v1.RollbackTransactionRequest",
          "description": "Rollback transaction with the given ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name this transaction belongs to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RollbackTransactionResponse",
          "longName": "RollbackTransactionResponse",
          "fullName": "tigrisdata.v1.RollbackTransactionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "Status of rollback transaction operation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchFacet",
          "longName": "SearchFacet",
          "fullName": "tigrisdata.v1.SearchFacet",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "counts",
              "description": "",
              "label": "repeated",
              "type": "FacetCount",
              "longType": "FacetCount",
              "fullType": "tigrisdata.v1.FacetCount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stats",
              "description": "",
              "label": "",
              "type": "FacetStats",
              "longType": "FacetStats",
              "fullType": "tigrisdata.v1.FacetStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchHit",
          "longName": "SearchHit",
          "fullName": "tigrisdata.v1.SearchHit",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Actual search document",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Has metadata related to the search hit",
              "label": "",
              "type": "SearchHitMeta",
              "longType": "SearchHitMeta",
              "fullType": "tigrisdata.v1.SearchHitMeta",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchHitMeta",
          "longName": "SearchHitMeta",
          "fullName": "tigrisdata.v1.SearchHitMeta",
          "description": "Contains metadata related to the search hit, has information about document created_at/updated_at as well.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "created_at",
              "description": "Time at which the document was inserted/replaced. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Time at which the document was updated. Measured in nano-seconds since the Unix epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchMetadata",
          "longName": "SearchMetadata",
          "fullName": "tigrisdata.v1.SearchMetadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "found",
              "description": "Total number of search results across all pages",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_pages",
              "description": "Number representing the total pages of results",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page",
              "description": "",
              "label": "",
              "type": "Page",
              "longType": "Page",
              "fullType": "tigrisdata.v1.Page",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchRequest",
          "longName": "SearchRequest",
          "fullName": "tigrisdata.v1.SearchRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name to read documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name to read documents from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "q",
              "description": "Query string for searching across text fields",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "search_fields",
              "description": "Array of fields to project search query against",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Filter stacks on top of query results to further narrow down the results. Similar to `ReadRequest.filter`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "facet",
              "description": "Facet query to aggregate results on given fields. The field name for the facet search can be passed like this `{\"brand\": { \"size\": 10 }}`\nwhere the size controls the total facets for this field.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sort",
              "description": "Array of fields and corresponding sort orders to order the results `[{ \"salary\": \"$desc\" }]`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "include_fields",
              "description": "Array of document field names to include in results. By default, all fields are included.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exclude_fields",
              "description": "Array of document field names to exclude from results. `include_fields`, if specified, takes precedence over `exclude_fields`.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_size",
              "description": "Optionally can set the number of hits to be returned per page, default is 20.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page",
              "description": "Optionally can specify the page to retrieve. If page is set then only hits for this page is returned",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collation",
              "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
              "label": "",
              "type": "Collation",
              "longType": "Collation",
              "fullType": "tigrisdata.v1.Collation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchResponse",
          "longName": "SearchResponse",
          "fullName": "tigrisdata.v1.SearchResponse",
          "description": "Response struct for search",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hits",
              "description": "",
              "label": "repeated",
              "type": "SearchHit",
              "longType": "SearchHit",
              "fullType": "tigrisdata.v1.SearchHit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "facets",
              "description": "",
              "label": "repeated",
              "type": "FacetsEntry",
              "longType": "SearchResponse.FacetsEntry",
              "fullType": "tigrisdata.v1.SearchResponse.FacetsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "meta",
              "description": "",
              "label": "",
              "type": "SearchMetadata",
              "longType": "SearchMetadata",
              "fullType": "tigrisdata.v1.SearchMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FacetsEntry",
          "longName": "SearchResponse.FacetsEntry",
          "fullName": "tigrisdata.v1.SearchResponse.FacetsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "SearchFacet",
              "longType": "SearchFacet",
              "fullType": "tigrisdata.v1.SearchFacet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StreamEvent",
          "longName": "StreamEvent",
          "fullName": "tigrisdata.v1.StreamEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx_id",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "op",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lkey",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rkey",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubscribeRequest",
          "longName": "SubscribeRequest",
          "fullName": "tigrisdata.v1.SubscribeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Topic name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "SubscribeRequestOptions",
              "longType": "SubscribeRequestOptions",
              "fullType": "tigrisdata.v1.SubscribeRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Filter allows you to subscribe only for events that you need. Filter syntax is similar to `ReadRequest.filter`.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubscribeRequestOptions",
          "longName": "SubscribeRequestOptions",
          "fullName": "tigrisdata.v1.SubscribeRequestOptions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "partitions",
              "description": "",
              "label": "repeated",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubscribeResponse",
          "longName": "SubscribeResponse",
          "fullName": "tigrisdata.v1.SubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionCtx",
          "longName": "TransactionCtx",
          "fullName": "tigrisdata.v1.TransactionCtx",
          "description": "Contains ID which uniquely identifies transaction\nThis context is returned by BeginTransaction request and\nshould be passed in the metadata (headers) of subsequent requests\nin order to run them in the context of the same transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique for a single transactional request.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "origin",
              "description": "Serves as an internal identifier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionOptions",
          "longName": "TransactionOptions",
          "fullName": "tigrisdata.v1.TransactionOptions",
          "description": "Options that can be used to modify the transaction semantics.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "UpdateRequest",
          "longName": "UpdateRequest",
          "fullName": "tigrisdata.v1.UpdateRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "Database name where to update documents",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "Collection name where to update documents",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "Fields contains set of fields\nwith the values which need to be updated.\nShould be proper JSON object.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Update documents which matching specified filter.\nA filter can simply be key, value where key\nis the field name and value would be the value for this field. Or a filter can be logical where\ntwo or more fields can be logically joined using $or and $and. A few examples of filter:\n\u003cli\u003e To update a user document where the id has a value 1: ```{\"id\": 1 }```\n\u003cli\u003e To update all the user documents where the key \"id\" has a value 1 or 2 or 3: `{\"$or\": [{\"id\": 1}, {\"id\": 2}, {\"id\": 3}]}`",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "",
              "label": "",
              "type": "UpdateRequestOptions",
              "longType": "UpdateRequestOptions",
              "fullType": "tigrisdata.v1.UpdateRequestOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateRequestOptions",
          "longName": "UpdateRequestOptions",
          "fullName": "tigrisdata.v1.UpdateRequestOptions",
          "description": "Additional options for update requests.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "write_options",
              "description": "",
              "label": "",
              "type": "WriteOptions",
              "longType": "WriteOptions",
              "fullType": "tigrisdata.v1.WriteOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collation",
              "description": "A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set\nthis option to 'ci' that will apply to all the text fields in the filters.",
              "label": "",
              "type": "Collation",
              "longType": "Collation",
              "fullType": "tigrisdata.v1.Collation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateResponse",
          "longName": "UpdateResponse",
          "fullName": "tigrisdata.v1.UpdateResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Has metadata related to the documents stored.",
              "label": "",
              "type": "ResponseMetadata",
              "longType": "ResponseMetadata",
              "fullType": "tigrisdata.v1.ResponseMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "modified_count",
              "description": "Returns the number of documents modified.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "an enum with value set as \"updated\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WriteOptions",
          "longName": "WriteOptions",
          "fullName": "tigrisdata.v1.WriteOptions",
          "description": "Additional options to modify write requests.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "Tigris",
          "longName": "Tigris",
          "fullName": "tigrisdata.v1.Tigris",
          "description": "",
          "methods": [
            {
              "name": "BeginTransaction",
              "description": "Starts a new transaction and returns a transactional object. All reads/writes performed\nwithin a transaction will run with serializable isolation.",
              "requestType": "BeginTransactionRequest",
              "requestLongType": "BeginTransactionRequest",
              "requestFullType": "tigrisdata.v1.BeginTransactionRequest",
              "requestStreaming": false,
              "responseType": "BeginTransactionResponse",
              "responseLongType": "BeginTransactionResponse",
              "responseFullType": "tigrisdata.v1.BeginTransactionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/transactions/begin",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CommitTransaction",
              "description": "Atomically commit all the changes performed in the context of the transaction. Commit provides all\nor nothing semantics by ensuring no partial updates are in the database due to a transaction failure.",
              "requestType": "CommitTransactionRequest",
              "requestLongType": "CommitTransactionRequest",
              "requestFullType": "tigrisdata.v1.CommitTransactionRequest",
              "requestStreaming": false,
              "responseType": "CommitTransactionResponse",
              "responseLongType": "CommitTransactionResponse",
              "responseFullType": "tigrisdata.v1.CommitTransactionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/transactions/commit",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "RollbackTransaction",
              "description": "Rollback transaction discards all the changes\nperformed in the transaction",
              "requestType": "RollbackTransactionRequest",
              "requestLongType": "RollbackTransactionRequest",
              "requestFullType": "tigrisdata.v1.RollbackTransactionRequest",
              "requestStreaming": false,
              "responseType": "RollbackTransactionResponse",
              "responseLongType": "RollbackTransactionResponse",
              "responseFullType": "tigrisdata.v1.RollbackTransactionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/transactions/rollback",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Insert",
              "description": "Inserts new documents in the collection and returns an AlreadyExists error if any of the documents\nin the request already exists. Insert provides idempotency by returning an error if the document\nalready exists. To replace documents, use REPLACE API instead of INSERT.",
              "requestType": "InsertRequest",
              "requestLongType": "InsertRequest",
              "requestFullType": "tigrisdata.v1.InsertRequest",
              "requestStreaming": false,
              "responseType": "InsertResponse",
              "responseLongType": "InsertResponse",
              "responseFullType": "tigrisdata.v1.InsertResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/documents/insert",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Replace",
              "description": "Inserts the documents or replaces the existing documents in the collections.",
              "requestType": "ReplaceRequest",
              "requestLongType": "ReplaceRequest",
              "requestFullType": "tigrisdata.v1.ReplaceRequest",
              "requestStreaming": false,
              "responseType": "ReplaceResponse",
              "responseLongType": "ReplaceResponse",
              "responseFullType": "tigrisdata.v1.ReplaceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PUT",
                      "pattern": "/v1/databases/{db}/collections/{collection}/documents/replace",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Delete",
              "description": "Delete a range of documents in the collection using the condition provided in the filter.",
              "requestType": "DeleteRequest",
              "requestLongType": "DeleteRequest",
              "requestFullType": "tigrisdata.v1.DeleteRequest",
              "requestStreaming": false,
              "responseType": "DeleteResponse",
              "responseLongType": "DeleteResponse",
              "responseFullType": "tigrisdata.v1.DeleteResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/databases/{db}/collections/{collection}/documents/delete",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Update",
              "description": "Update a range of documents in the collection using the condition provided in the filter.",
              "requestType": "UpdateRequest",
              "requestLongType": "UpdateRequest",
              "requestFullType": "tigrisdata.v1.UpdateRequest",
              "requestStreaming": false,
              "responseType": "UpdateResponse",
              "responseLongType": "UpdateResponse",
              "responseFullType": "tigrisdata.v1.UpdateResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PUT",
                      "pattern": "/v1/databases/{db}/collections/{collection}/documents/update",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Read",
              "description": "Reads a range of documents from the collection, or messages from a collection in case of event streaming. Tigris does not require you to\nindex any fields and automatically index all the fields which means you can filter by any field in the document.\nAn empty filter will trigger reading all the documents inside this collection. The API supports pagination that\ncan be used by passing `Limit/Skip` parameters. The `skip` parameter skips the number of documents from the start and\nthe `limit` parameter is used to specify the number of documents to read. You can find more detailed documentation\nof the Read API \u003ca href=\"https://docs.tigrisdata.com/overview/query\" title=\"here\"\u003ehere\u003c/a\u003e.",
              "requestType": "ReadRequest",
              "requestLongType": "ReadRequest",
              "requestFullType": "tigrisdata.v1.ReadRequest",
              "requestStreaming": false,
              "responseType": "ReadResponse",
              "responseLongType": "ReadResponse",
              "responseFullType": "tigrisdata.v1.ReadResponse",
              "responseStreaming": true,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/documents/read",
                      "body": "*"
                    },
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/messages/read",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Search",
              "description": "Searches a collection for the documents matching the query, or messages in case of event streaming. A search can be\na term search or a phrase search. Search API allows filtering the result set using filters as documented \u003ca href=\"https://docs.tigrisdata.com/overview/query#specification-1\" title=\"here\"\u003ehere\u003c/a\u003e.\nYou can also perform a faceted search by passing the fields in the facet parameter.\nYou can find more detailed documentation of the Search API with multiple examples \u003ca href=\"https://docs.tigrisdata.com/overview/search\" title=\"here\"\u003ehere\u003c/a\u003e.",
              "requestType": "SearchRequest",
              "requestLongType": "SearchRequest",
              "requestFullType": "tigrisdata.v1.SearchRequest",
              "requestStreaming": false,
              "responseType": "SearchResponse",
              "responseLongType": "SearchResponse",
              "responseFullType": "tigrisdata.v1.SearchResponse",
              "responseStreaming": true,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/documents/search",
                      "body": "*"
                    },
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/messages/search",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateOrUpdateCollection",
              "description": "Creates a new collection or atomically upgrades the collection to the new schema provided in the request.\nSchema changes are applied atomically and immediately without any downtime.\nTigris Offers two types of collections: \u003cp\u003e\u003c/p\u003e\n   \u003cli\u003e `DOCUMENTS`: Offers rich CRUD APIs.\n   \u003cli\u003e `MESSAGES`: Offers event streaming APIs.",
              "requestType": "CreateOrUpdateCollectionRequest",
              "requestLongType": "CreateOrUpdateCollectionRequest",
              "requestFullType": "tigrisdata.v1.CreateOrUpdateCollectionRequest",
              "requestStreaming": false,
              "responseType": "CreateOrUpdateCollectionResponse",
              "responseLongType": "CreateOrUpdateCollectionResponse",
              "responseFullType": "tigrisdata.v1.CreateOrUpdateCollectionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/createOrUpdate",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DropCollection",
              "description": "Drop the collection inside this database. This API deletes all of the documents inside this collection and any metadata associated with it.",
              "requestType": "DropCollectionRequest",
              "requestLongType": "DropCollectionRequest",
              "requestFullType": "tigrisdata.v1.DropCollectionRequest",
              "requestStreaming": false,
              "responseType": "DropCollectionResponse",
              "responseLongType": "DropCollectionResponse",
              "responseFullType": "tigrisdata.v1.DropCollectionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/databases/{db}/collections/{collection}/drop",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListDatabases",
              "description": "List returns all the databases.",
              "requestType": "ListDatabasesRequest",
              "requestLongType": "ListDatabasesRequest",
              "requestFullType": "tigrisdata.v1.ListDatabasesRequest",
              "requestStreaming": false,
              "responseType": "ListDatabasesResponse",
              "responseLongType": "ListDatabasesResponse",
              "responseFullType": "tigrisdata.v1.ListDatabasesResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/list"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListCollections",
              "description": "List all the collections present in the database passed in the request.",
              "requestType": "ListCollectionsRequest",
              "requestLongType": "ListCollectionsRequest",
              "requestFullType": "tigrisdata.v1.ListCollectionsRequest",
              "requestStreaming": false,
              "responseType": "ListCollectionsResponse",
              "responseLongType": "ListCollectionsResponse",
              "responseFullType": "tigrisdata.v1.ListCollectionsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/list",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateDatabase",
              "description": "Creates a new database. Returns an AlreadyExists error with a status code 409 if the database already exists.",
              "requestType": "CreateDatabaseRequest",
              "requestLongType": "CreateDatabaseRequest",
              "requestFullType": "tigrisdata.v1.CreateDatabaseRequest",
              "requestStreaming": false,
              "responseType": "CreateDatabaseResponse",
              "responseLongType": "CreateDatabaseResponse",
              "responseFullType": "tigrisdata.v1.CreateDatabaseResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/create",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DropDatabase",
              "description": "Drop database deletes all the collections in this database along with all of the documents, and associated metadata for these collections.",
              "requestType": "DropDatabaseRequest",
              "requestLongType": "DropDatabaseRequest",
              "requestFullType": "tigrisdata.v1.DropDatabaseRequest",
              "requestStreaming": false,
              "responseType": "DropDatabaseResponse",
              "responseLongType": "DropDatabaseResponse",
              "responseFullType": "tigrisdata.v1.DropDatabaseResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/v1/databases/{db}/drop",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DescribeDatabase",
              "description": "This API returns information related to the database along with all the collections inside the database.\nThis can be used to retrieve the size of the database or to retrieve schemas and the size of all the collections present in this database.",
              "requestType": "DescribeDatabaseRequest",
              "requestLongType": "DescribeDatabaseRequest",
              "requestFullType": "tigrisdata.v1.DescribeDatabaseRequest",
              "requestStreaming": false,
              "responseType": "DescribeDatabaseResponse",
              "responseLongType": "DescribeDatabaseResponse",
              "responseFullType": "tigrisdata.v1.DescribeDatabaseResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/describe",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DescribeCollection",
              "description": "Returns the information related to the collection. This can be used to retrieve the schema or size of the collection.",
              "requestType": "DescribeCollectionRequest",
              "requestLongType": "DescribeCollectionRequest",
              "requestFullType": "tigrisdata.v1.DescribeCollectionRequest",
              "requestStreaming": false,
              "responseType": "DescribeCollectionResponse",
              "responseLongType": "DescribeCollectionResponse",
              "responseFullType": "tigrisdata.v1.DescribeCollectionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/describe",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Events",
              "description": "Stream real-time events for mutations made to the collections in the database. Each stream will have a transaction\nidentifier attached to it and will have a boolean flag “last” set to the last event of the transaction which will be useful\nif a transaction performed more than one operation in the collection.",
              "requestType": "EventsRequest",
              "requestLongType": "EventsRequest",
              "requestFullType": "tigrisdata.v1.EventsRequest",
              "requestStreaming": false,
              "responseType": "EventsResponse",
              "responseLongType": "EventsResponse",
              "responseFullType": "tigrisdata.v1.EventsResponse",
              "responseStreaming": true,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/events",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Publish",
              "description": "Endpoint for publishing messages to a topic.",
              "requestType": "PublishRequest",
              "requestLongType": "PublishRequest",
              "requestFullType": "tigrisdata.v1.PublishRequest",
              "requestStreaming": false,
              "responseType": "PublishResponse",
              "responseLongType": "PublishResponse",
              "responseFullType": "tigrisdata.v1.PublishResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/messages/publish",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Subscribe",
              "description": "Endpoint for subscribing to a topic to receive a stream of messages. The `partition` can be set to stream only\nfrom a specific partition.",
              "requestType": "SubscribeRequest",
              "requestLongType": "SubscribeRequest",
              "requestFullType": "tigrisdata.v1.SubscribeRequest",
              "requestStreaming": false,
              "responseType": "SubscribeResponse",
              "responseLongType": "SubscribeResponse",
              "responseFullType": "tigrisdata.v1.SubscribeResponse",
              "responseStreaming": true,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/databases/{db}/collections/{collection}/messages/subscribe",
                      "body": "*"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "server/v1/admin.proto",
      "description": "",
      "package": "tigrisdata.admin.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": false,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [],
      "services": [
        {
          "name": "Admin",
          "longName": "Admin",
          "fullName": "tigrisdata.admin.v1.Admin",
          "description": "",
          "methods": null
        }
      ]
    },
    {
      "name": "server/v1/health.proto",
      "description": "",
      "package": "",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "HealthCheckInput",
          "longName": "HealthCheckInput",
          "fullName": ".HealthCheckInput",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "HealthCheckResponse",
          "longName": "HealthCheckResponse",
          "fullName": ".HealthCheckResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "response",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "HealthAPI",
          "longName": "HealthAPI",
          "fullName": ".HealthAPI",
          "description": "",
          "methods": [
            {
              "name": "Health",
              "description": "This endpoint can be used to check the liveness of the server.",
              "requestType": "HealthCheckInput",
              "requestLongType": ".HealthCheckInput",
              "requestFullType": "HealthCheckInput",
              "requestStreaming": false,
              "responseType": "HealthCheckResponse",
              "responseLongType": ".HealthCheckResponse",
              "responseFullType": "HealthCheckResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/health"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "server/v1/auth.proto",
      "description": "",
      "package": "tigrisdata.auth.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "GrantType",
          "longName": "GrantType",
          "fullName": "tigrisdata.auth.v1.GrantType",
          "description": "",
          "values": [
            {
              "name": "REFRESH_TOKEN",
              "number": "0",
              "description": ""
            },
            {
              "name": "CLIENT_CREDENTIALS",
              "number": "1",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "GetAccessTokenRequest",
          "longName": "GetAccessTokenRequest",
          "fullName": "tigrisdata.auth.v1.GetAccessTokenRequest",
          "description": "The Request message for the GetAccessToken. The grant type is a required field and based on the grant type\nthe other fields are used as mentioned below.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "grant_type",
              "description": "",
              "label": "",
              "type": "GrantType",
              "longType": "GrantType",
              "fullType": "tigrisdata.auth.v1.GrantType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "refresh_token",
              "description": "Refresh token is required when grant type is set as `REFRESH_TOKEN`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "client_id",
              "description": "Client Id is required when grant type is set as `CLIENT_CREDENTIALS`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "client_secret",
              "description": "Your Tigris API Key is required when grant type is set as `CLIENT_CREDENTIALS`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAccessTokenResponse",
          "longName": "GetAccessTokenResponse",
          "fullName": "tigrisdata.auth.v1.GetAccessTokenResponse",
          "description": "The response of GetAccessToken which contains access_token and optionally refresh_token.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "access_token",
              "description": "An Access Token.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "refresh_token",
              "description": "The Refresh Token.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_in",
              "description": "Access token expiration timeout in seconds.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Auth",
          "longName": "Auth",
          "fullName": "tigrisdata.auth.v1.Auth",
          "description": "",
          "methods": [
            {
              "name": "GetAccessToken",
              "description": "Endpoint for receiving access token from Tigris Server. The endpoint requires Grant Type(`grant_type`) which has\ntwo possible values \u003ci\u003e\"REFRESH_TOKEN\"\u003c/i\u003e or \u003ci\u003e\"CLIENT_CREDENTIALS\"\u003c/i\u003e based on which either Refresh token(`refresh_token`)\nneeds to be set or client credentials(`client_id`, `client_secret`).",
              "requestType": "GetAccessTokenRequest",
              "requestLongType": "GetAccessTokenRequest",
              "requestFullType": "tigrisdata.auth.v1.GetAccessTokenRequest",
              "requestStreaming": false,
              "responseType": "GetAccessTokenResponse",
              "responseLongType": "GetAccessTokenResponse",
              "responseFullType": "tigrisdata.auth.v1.GetAccessTokenResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/auth/token",
                      "body": "*"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "server/v1/observability.proto",
      "description": "",
      "package": "tigrisdata.observability.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "Code",
          "longName": "Code",
          "fullName": "tigrisdata.observability.v1.Code",
          "description": "Codes returned by the Tigris server in the case of error",
          "values": [
            {
              "name": "OK",
              "number": "0",
              "description": "200"
            },
            {
              "name": "CANCELLED",
              "number": "1",
              "description": "499"
            },
            {
              "name": "UNKNOWN",
              "number": "2",
              "description": "500"
            },
            {
              "name": "INVALID_ARGUMENT",
              "number": "3",
              "description": "400"
            },
            {
              "name": "DEADLINE_EXCEEDED",
              "number": "4",
              "description": "504"
            },
            {
              "name": "NOT_FOUND",
              "number": "5",
              "description": "404"
            },
            {
              "name": "ALREADY_EXISTS",
              "number": "6",
              "description": "409"
            },
            {
              "name": "PERMISSION_DENIED",
              "number": "7",
              "description": "403"
            },
            {
              "name": "RESOURCE_EXHAUSTED",
              "number": "8",
              "description": "429"
            },
            {
              "name": "FAILED_PRECONDITION",
              "number": "9",
              "description": "412"
            },
            {
              "name": "ABORTED",
              "number": "10",
              "description": "409"
            },
            {
              "name": "OUT_OF_RANGE",
              "number": "11",
              "description": "400"
            },
            {
              "name": "UNIMPLEMENTED",
              "number": "12",
              "description": "501"
            },
            {
              "name": "INTERNAL",
              "number": "13",
              "description": "500"
            },
            {
              "name": "UNAVAILABLE",
              "number": "14",
              "description": "503"
            },
            {
              "name": "DATA_LOSS",
              "number": "15",
              "description": "500"
            },
            {
              "name": "UNAUTHENTICATED",
              "number": "16",
              "description": "401"
            },
            {
              "name": "CONFLICT",
              "number": "17",
              "description": "409"
            },
            {
              "name": "BAD_GATEWAY",
              "number": "18",
              "description": "502"
            },
            {
              "name": "METHOD_NOT_ALLOWED",
              "number": "19",
              "description": "405"
            }
          ]
        },
        {
          "name": "MetricQueryFunction",
          "longName": "MetricQueryFunction",
          "fullName": "tigrisdata.observability.v1.MetricQueryFunction",
          "description": "Function to apply on metrics query",
          "values": [
            {
              "name": "RATE",
              "number": "0",
              "description": ""
            },
            {
              "name": "COUNT",
              "number": "1",
              "description": ""
            },
            {
              "name": "NONE",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "MetricQuerySpaceAggregation",
          "longName": "MetricQuerySpaceAggregation",
          "fullName": "tigrisdata.observability.v1.MetricQuerySpaceAggregation",
          "description": "Specifies how the metric should be aggregated for the time slices.",
          "values": [
            {
              "name": "AVG",
              "number": "0",
              "description": ""
            },
            {
              "name": "MIN",
              "number": "1",
              "description": ""
            },
            {
              "name": "MAX",
              "number": "2",
              "description": ""
            },
            {
              "name": "SUM",
              "number": "3",
              "description": ""
            }
          ]
        },
        {
          "name": "RollupAggregator",
          "longName": "RollupAggregator",
          "fullName": "tigrisdata.observability.v1.RollupAggregator",
          "description": "Specifies how the initial query's result buckets should be processed in\nnext stage.",
          "values": [
            {
              "name": "ROLLUP_AGGREGATOR_SUM",
              "number": "0",
              "description": ""
            },
            {
              "name": "ROLLUP_AGGREGATOR_COUNT",
              "number": "1",
              "description": ""
            },
            {
              "name": "ROLLUP_AGGREGATOR_MIN",
              "number": "2",
              "description": ""
            },
            {
              "name": "ROLLUP_AGGREGATOR_MAX",
              "number": "3",
              "description": ""
            },
            {
              "name": "ROLLUP_AGGREGATOR_AVG",
              "number": "4",
              "description": ""
            }
          ]
        },
        {
          "name": "TigrisOperation",
          "longName": "TigrisOperation",
          "fullName": "tigrisdata.observability.v1.TigrisOperation",
          "description": "Represents Tigris operation category",
          "values": [
            {
              "name": "ALL",
              "number": "0",
              "description": ""
            },
            {
              "name": "READ",
              "number": "1",
              "description": ""
            },
            {
              "name": "WRITE",
              "number": "2",
              "description": ""
            },
            {
              "name": "METADATA",
              "number": "3",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AdditionalFunction",
          "longName": "AdditionalFunction",
          "fullName": "tigrisdata.observability.v1.AdditionalFunction",
          "description": "Additional function to apply on metrics query",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "rollup",
              "description": "",
              "label": "optional",
              "type": "RollupFunction",
              "longType": "RollupFunction",
              "fullType": "tigrisdata.observability.v1.RollupFunction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_rollup",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataPoint",
          "longName": "DataPoint",
          "fullName": "tigrisdata.observability.v1.DataPoint",
          "description": "Represents the data point in timeseries.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Error",
          "longName": "Error",
          "fullName": "tigrisdata.observability.v1.Error",
          "description": "The Error type defines a logical error model",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "The status code is a short, machine parsable string,\nwhich uniquely identifies the error type.\nTigris to HTTP code mapping [here](/reference/http-code)",
              "label": "",
              "type": "Code",
              "longType": "Code",
              "fullType": "tigrisdata.observability.v1.Code",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "A developer-facing descriptive error message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ErrorDetails",
          "longName": "ErrorDetails",
          "fullName": "tigrisdata.observability.v1.ErrorDetails",
          "description": "ErrorDetails defines error format passed by Tigris HTTP protocol",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "retry",
              "description": "",
              "label": "",
              "type": "RetryInfo",
              "longType": "RetryInfo",
              "fullType": "tigrisdata.observability.v1.RetryInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetInfoRequest",
          "longName": "GetInfoRequest",
          "fullName": "tigrisdata.observability.v1.GetInfoRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetInfoResponse",
          "longName": "GetInfoResponse",
          "fullName": "tigrisdata.observability.v1.GetInfoResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "server_version",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "NOTE: This is a hack to propagate this object definition to OpenAPI",
              "label": "",
              "type": "Error",
              "longType": "Error",
              "fullType": "tigrisdata.observability.v1.Error",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MetricSeries",
          "longName": "MetricSeries",
          "fullName": "tigrisdata.observability.v1.MetricSeries",
          "description": "Represents series in timeseries based on input query.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metric",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scope",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dataPoints",
              "description": "",
              "label": "repeated",
              "type": "DataPoint",
              "longType": "DataPoint",
              "fullType": "tigrisdata.observability.v1.DataPoint",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTimeSeriesMetricsRequest",
          "longName": "QueryTimeSeriesMetricsRequest",
          "fullName": "tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest",
          "description": "Requests the time series metrics",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "db",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metric_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tigris_operation",
              "description": "",
              "label": "",
              "type": "TigrisOperation",
              "longType": "TigrisOperation",
              "fullType": "tigrisdata.observability.v1.TigrisOperation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "space_aggregation",
              "description": "",
              "label": "",
              "type": "MetricQuerySpaceAggregation",
              "longType": "MetricQuerySpaceAggregation",
              "fullType": "tigrisdata.observability.v1.MetricQuerySpaceAggregation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "space_aggregated_by",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "function",
              "description": "",
              "label": "",
              "type": "MetricQueryFunction",
              "longType": "MetricQueryFunction",
              "fullType": "tigrisdata.observability.v1.MetricQueryFunction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantile",
              "description": "",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "additionalFunctions",
              "description": "",
              "label": "repeated",
              "type": "AdditionalFunction",
              "longType": "AdditionalFunction",
              "fullType": "tigrisdata.observability.v1.AdditionalFunction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTimeSeriesMetricsResponse",
          "longName": "QueryTimeSeriesMetricsResponse",
          "fullName": "tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse",
          "description": "QueryTimeSeriesMetric responds with this type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "query",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "series",
              "description": "",
              "label": "repeated",
              "type": "MetricSeries",
              "longType": "MetricSeries",
              "fullType": "tigrisdata.observability.v1.MetricSeries",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RetryInfo",
          "longName": "RetryInfo",
          "fullName": "tigrisdata.observability.v1.RetryInfo",
          "description": "Contains retry information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delay",
              "description": "retry delay advice in milliseconds",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RollupFunction",
          "longName": "RollupFunction",
          "fullName": "tigrisdata.observability.v1.RollupFunction",
          "description": "Rollup function aggregates the slices of metrics returned by original query\nand lets you operate on the slices using aggregator and constructs the\nbigger slice of your choice of interval (specified in seconds).",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "aggregator",
              "description": "",
              "label": "",
              "type": "RollupAggregator",
              "longType": "RollupAggregator",
              "fullType": "tigrisdata.observability.v1.RollupAggregator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interval",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Observability",
          "longName": "Observability",
          "fullName": "tigrisdata.observability.v1.Observability",
          "description": "",
          "methods": [
            {
              "name": "QueryTimeSeriesMetrics",
              "description": "Queries time series metrics",
              "requestType": "QueryTimeSeriesMetricsRequest",
              "requestLongType": "QueryTimeSeriesMetricsRequest",
              "requestFullType": "tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest",
              "requestStreaming": false,
              "responseType": "QueryTimeSeriesMetricsResponse",
              "responseLongType": "QueryTimeSeriesMetricsResponse",
              "responseFullType": "tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/observability/metrics/timeseries/query",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetInfo",
              "description": "Provides the information about the server. This information includes returning the server version, etc.",
              "requestType": "GetInfoRequest",
              "requestLongType": "GetInfoRequest",
              "requestFullType": "tigrisdata.observability.v1.GetInfoRequest",
              "requestStreaming": false,
              "responseType": "GetInfoResponse",
              "responseLongType": "GetInfoResponse",
              "responseFullType": "tigrisdata.observability.v1.GetInfoResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1/observability/info"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}
